{id: 01-base-04-heroku-02-inizializiamo_heroku}
# Cap 4.2 -- Andiamo in produzione su Heroku

Pubblichiamo la nostra applicazionie sull'ambiente di produzione Heroku.

Andiamo subito in produzione così risolviamo di volta in volta gli eventuali problemi che si presentano senza essere costretti a fare un troubleshooting su tutto l'applicativo.

Risorse interne:

* 99-rails_references/Heroku/



 
## Verifichiamo dove eravamo rimasti

{caption: "terminal", format: bash, line-numbers: false}
```
$ git status
$ git log
```




## Apriamo il branch "Pubblichiamo in Produzione"

{caption: "terminal", format: bash, line-numbers: false}
```
$ git checkout -b pp
```




## Verifichiamo se abbiamo Heroku installato su aws Cloud9  

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku --version


user_fb:~/environment/bl6_0 (master) $ heroku --version
Command 'heroku' not found, but can be installed with:
sudo snap install heroku
```

Nel nostro caso non è installato.





## Creiamoci un account Heroku  

Per prima cosa creiamoci un account su www.heroku.com

![fig. 01](chapters/01-base/04-heroku/02_fig01-heroku_signup.png)




## Installiamo Heroku CLI


Come abbiamo già fatto per PostgreSQL, anche Heroku lo installiamo sulla cartella principale di aws Cloud9: "/environment".
Assicuriamoci di essere sulla cartella principale

{caption: "terminal", format: bash, line-numbers: false}
```
$ cd ~/environment


user_fb:~/environment/bl6_0 (pp) $ cd ~/environment
user_fb:~/environment $ 
```

Per installare Heroku dobbiamo scaricare ed installare la "heroku CLI" (ex heroku-toolbelt).
Seguendo le indicazioni di [Heroku](https://devcenter.heroku.com/articles/heroku-cli) il comando che dobbiamo usare da aws cloud9, che è un "docker container" è questo:

{caption: "terminal", format: bash, line-numbers: false}
```
$ sudo su -
-> curl https://cli-assets.heroku.com/install.sh | sh
-> exit


user_fb:~/environment $ sudo su -
root@ip-172-31-87-229:~# curl https://cli-assets.heroku.com/install.sh | sh
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  1892  100  1892    0     0  21022      0 --:--:-- --:--:-- --:--:-- 21258
Installing CLI from https://cli-assets.heroku.com/heroku-linux-x64.tar.xz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 16.9M  100 16.9M    0     0  6208k      0  0:00:02  0:00:02 --:--:-- 6206k
v11.14.0
heroku installed to /usr/local/bin/heroku
heroku/7.33.3 linux-x64 node-v11.14.0
root@ip-172-31-87-229:~# exit
logout
user_fb:~/environment $ 
```


Verifichiamo che l'installazione è andata a buon fine.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku --version


user_fb:~/environment $ heroku --version
heroku/7.33.3 linux-x64 node-v11.14.0
```




## Creiamo l'app su heroku

Torniamo nella cartella della nostra applicazione Rails

{caption: "terminal", format: bash, line-numbers: false}
```
$ cd bl6_0
```


Loghiamoci con le credenziali usate nella creazione dell'account heroku (sign_up).

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku login

user_fb:~/environment/bl6_0 (pp) $ heroku login
heroku: Press any key to open up the browser to login or q to exit: 
Opening browser to https://cli-auth.heroku.com/auth/browser/fbca295d-9ffd-46ba-9bf5-2b13698871c1
 ›   Warning: Cannot open browser.
Logging in... done
```

Questa procedura ti fa fare il login sulla pagina web. Basta cliccare sul link, scegliere "open" ed eseguire il login.

![fig. 02](chapters/01-base/04-heroku/02_fig02-heroku-login-via_aws_cloud9.png)


Aggiungiamo la nostra chiave di criptatura in modo da stabilire un canale sicuro tra aws Cloud9 ed Heroku.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku keys:add
-> y


user_fb:~/environment/bl6_0 (pp) $ heroku keys:add
Could not find an existing SSH key at ~/.ssh/id_rsa.pub
? Would you like to generate a new one? Yes
Generating public/private rsa key pair.
Your identification has been saved in /home/ubuntu/.ssh/id_rsa.
Your public key has been saved in /home/ubuntu/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:SP7SsNopsq4k+nhqb7VJO/E3/ShOvX1G5/Po+9EIYHs ec2-user@ip-172-31-34-226
The key's randomart image is:
+---[RSA 2048]----+
|                 |
|                 |
|      .   o      |
|     o . . o     |
|      + S . E    |
|     + =  .. . oo|
|..  o O o...  ooo|
|+oo..B +.+ .+  =o|
|***+..+ o.oo.+*o=|
+----[SHA256]-----+
Uploading /home/ubuntu/.ssh/id_rsa.pub SSH key... done
user_fb:~/environment/bl6_0 (pp) $ 
```


Creiamo una nuova app su heroku.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku create


user_fb:~/environment/bl6_0 (pp) $ heroku create
Creating app... done, ⬢ fast-badlands-90556
https://fast-badlands-90556.herokuapp.com/ | https://git.heroku.com/fast-badlands-90556.git
```

l'app viene creata dinamnicamente. In questo caso è stato creato " fast-badlands-90556 " ma può essere qualsiasi nome.


Per verficarlo si può usare il comando

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku domains


user_fb:~/environment/bl6_0 (pp) $ heroku domains
=== fast-badlands-90556 Heroku Domain
fast-badlands-90556.herokuapp.com
```

oppure

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku apps:info


user_fb:~/environment/bl6_0 (pp) $ heroku apps:info
=== fast-badlands-90556
Auto Cert Mgmt: false
Dynos:          
Git URL:        https://git.heroku.com/fast-badlands-90556.git
Owner:          flavio.bordoni@gmail.com
Region:         us
Repo Size:      0 B
Slug Size:      0 B
Stack:          heroku-18
Web URL:        https://fast-badlands-90556.herokuapp.com/
```


Possiamo verificare che abbiamo la configurazione git corretta con

{caption: "terminal", format: bash, line-numbers: false}
```
$ git config --list | grep heroku


user_fb:~/environment/bl6_0 (pp) $ git config --list | grep heroku
remote.heroku.url=https://git.heroku.com/fast-badlands-90556.git
remote.heroku.fetch=+refs/heads/*:refs/remotes/heroku/*
```

Se ci appare "fatal: not in a git directory" allora probabilmente non siamo nella directory corretta. Altrimenti possiamo mandare in produzione il nostro codice.




## Rinominiamo l'app

Diamo all'app di heroku un nome simile a quello del nostro ambiente di aws cloud9 che è anche simile al nome della nostra applicazione Rails. Così è più facile associarli.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku rename bl6-0


user_fb:~/environment/bl6_0 (pp) $ heroku rename bl6_0
Renaming fast-badlands-90556 to bl6_0... !
 ▸    Name must start with a letter, end with a letter or digit and can only contain lowercase letters, digits, and dashes.
user_fb:~/environment/bl6_0 (pp) $ heroku rename bl6-0
Renaming fast-badlands-90556 to bl6-0... done
https://bl6-0.herokuapp.com/ | https://git.heroku.com/bl6-0.git
Git remote heroku updated
 ▸    Don't forget to update git remotes for all other local checkouts of the app.
```

Attenzione:
Il nome deve essere unico in tutto l'ambiente Heroku. Se il nome fosse già utilizzato possiamo aggiungere un prefisso "-mese" per renderlo univoco.


verifichiamo di nuovo le informazione della nostra app

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku apps:info


user_fb:~/environment/bl6_0 (pp) $ heroku apps:info
=== bl6-0
Auto Cert Mgmt: false
Dynos:          
Git URL:        https://git.heroku.com/bl6-0.git
Owner:          flavio.bordoni@gmail.com
Region:         us
Repo Size:      0 B
Slug Size:      0 B
Stack:          heroku-18
Web URL:        https://bl6-0.herokuapp.com/
```

e la configurazione di git

{caption: "terminal", format: bash, line-numbers: false}
```
$ git config --list | grep heroku


user_fb:~/environment/bl6_0 (pp) $ git config --list | grep heroku
remote.heroku.url=https://git.heroku.com/bl6-0.git
remote.heroku.fetch=+refs/heads/*:refs/remotes/heroku/*
```

Adesso è tutto pronto. Possiamo fare il commit finale in locale e uploadare tutto in remoto.




## archiviamo su git

{caption: "terminal", format: bash, line-numbers: false}
```
$ git add -A
$ git commit -m "ready to public in production on heroku"
```




## Pubblichiamo su heroku

Attenzione! per pubblicare su heroku da un branch si usa il comando " git push heroku yourbranch:master ". [per approfondimenti](https://devcenter.heroku.com/articles/git)

{caption: "terminal", format: bash, line-numbers: false}
```
$ git push heroku pp:master
```




## Verifichiamo production

La nostra applicazione è ora in produzione su heroku. La possiamo vedere sul broser all'URL

https://bl6-0.herokuapp.com/

I> siccome non abbiamo ancora tabelle di database è stato sufficiente fare il "git push" ma quando avremo tabelle di database dobbiamo ricordarci di eseguire il "migrate" anche su heroku.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku run rake db:migrate
```




## Impostiamo i dynos

Per visualizzare la nostra app sul web stiamo usando un dyno di tipo web.
Vediamo quanti dynos abbiamo associato alla nostra app in produzione su heroku 

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku ps


user_fb:~/environment/bl6_0 (pp) $ heroku ps
Free dyno hours quota remaining this month: 813h 27m (81%)
Free dyno usage for this app: 0h 0m (0%)
For more information on dyno sleeping and how to upgrade, see:
https://devcenter.heroku.com/articles/dyno-sleeping

=== web (Free): bin/rails server -p $PORT -e $RAILS_ENV (1)
web.1: up 2019/10/25 12:01:25 +0000 (~ 3m ago)
```

abbiamo 1 dyno attivo " web.1: up ".

Se vogliamo assegnare più dynos usiamo il comando " ps:scale ". Ad esempio assicuriamoci di avere 1 dyno attivo per il web.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku ps:scale web=1


user_fb:~/environment/bl6_0 (pp) $ heroku ps:scale web=1
Scaling dynos... done, now running web at 1:Free
```

Possiamo verificare che non è cambiato nulla perché era già attivo di default 1 dyno.

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku ps


user_fb:~/environment/bl6_0 (pp) $ heroku ps
Free dyno hours quota remaining this month: 813h 27m (81%)
Free dyno usage for this app: 0h 0m (0%)
For more information on dyno sleeping and how to upgrade, see:
https://devcenter.heroku.com/articles/dyno-sleeping

=== web (Free): bin/rails server -p $PORT -e $RAILS_ENV (1)
web.1: up 2019/10/25 12:01:25 +0000 (~ 10m ago)
```

Se proviamo a scalare a 2 dynos riceviamo un messaggio di errore perché possiamo avere solo 1 dyno gratuito ogni applicazione. 

{caption: "terminal", format: bash, line-numbers: false}
```
$ heroku ps:scale web=2


user_fb:~/environment/bl6_0 (pp) $ heroku ps:scale web=2
Scaling dynos... !
 ▸    Cannot update to more than 1 Free size dynos per process type.
```


## Chiudiamo il branch

Lo chiudiamo nel prossimo capitolo
