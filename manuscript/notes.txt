www.leanpub.com
https://leanpub.com/leanpubabrandnewcms/preview

https://leanpub.com/help/getting_started_sync_dropbox
https://leanpub.com/help/manual

---
http://pygments.org/demo/   ->  vedi il codice nel menu a cascata

.html.erb   -> lang=HTML+Mako
      .rb   -> lang=ruby
      .yml  -> lang=yaml
      .coffe -> lang=CoffeeScript
      .scss  -> lang=ruby

---
$ sudo service postgresql start
$ rails s

$ rails s -b $IP -p $PORT

https://rebisworld3-flaviobordonidev.c9users.io/


---
http://themes.semicolonweb.com/html/canvas/intro.html
https://themeforest.net/item/canvas-the-multipurpose-html5-template/9228123/support

---
https://developers.facebook.com/docs/plugins/comments/#counter

---
https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-byebug-gem

---
WEBPACK TUTORIAL
https://www.youtube.com/watch?v=8DDVr6wjJzQ

---
http://themes.semicolonweb.com
http://themes.semicolonweb.com/html/canvas/v5/icon-lists.html

http://themes.semicolonweb.com/html/canvas/v5/index-corporate-4.php
http://themes.semicolonweb.com/html/canvas/v5/page-title-dark.php

http://support.semicolonweb.com/forums/topic/installing-in-ruby-on-rails-project/

http://themes.semicolonweb.com/html/canvas/rs-demo-premium-beforeafter.html

---
Articolo simpatico per LINK_TO
https://mixandgo.com/blog/how-to-use-link_to-in-rails

---
*** ATTENZIONE SU RAILS 5.1.2 hanno tolto dal Gemfile la gemma **gem 'jquery-rails'** ***
da tener presente importando il template canvas.

---
$ heroku domains

https://secret-cliffs-27330.herokuapp.com/


---
http://themes.semicolonweb.com/html/canvas/
http://themes.semicolonweb.com/html/canvas/intro.php
http://themes.semicolonweb.com/html/canvas/index-corporate-4.php
http://themes.semicolonweb.com/html/canvas/page-title-dark.php

https://www.youtube.com/watch?v=2RkLP9h2wNA&list=PLiENd6US8xnyhFA-9KxMqrHiqG3GCTMad&index=19


---
WEBPACK --> molto figo ma lo userò quando è implementato direttamente su rails (probabilmente con Rails 6.0) Per il momento resto sull'asset pipeline con Sprockets.

* [How we switched from Sprockets to Webpack](https://rossta.net/blog/from-sprockets-to-webpack.html#why-switch-)

---
Organizzare i models
https://www.zmwolski.com/Organizing-Ruby-on-Rails-Models

  # == Constants ============================================================

  # == Attributes ===========================================================
  
  # == Extensions ===========================================================

  # == Relationships ========================================================

  # == Validations ==========================================================

  # == Scopes ===============================================================

  # == Callbacks ============================================================

  # == Class Methods ========================================================

  # == Instance Methods =====================================================

Esempio:

  # == Constants ============================================================
  
  GENDERS = [[‘Male’, ‘m’], [‘Female’, ’f’]].freeze

  # == Attributes ===========================================================
  
  # ATTRIBUTES NOT MAPPED IN DATABASE (getter and setter methods)

  # paperclip ------------------------------------------------------------------
  attr_accessor :remove_logo
  #-----------------------------------------------------------------------------

  # globalize required ---------------------------------------------------------
  translates :sector, :memo, :fallbacks_for_empty_translations => true
  #-----------------------------------------------------------------------------

  # == Extensions ===========================================================

  # paperclip required ---------------------------------------------------------
  has_attached_file :logo, styles: { thumb: ["64x64!", :png] }

  has_attached_file :avatar, styles: {
    square_100: ‘100x100#’,
    square_300: ‘300x300#’
  }
  #-----------------------------------------------------------------------------

  # == Relationships ========================================================
  
  # association one-to-many ----------------------------------------------------
  has_many :documents
  #-----------------------------------------------------------------------------

  # == Validations ==========================================================
  
  validates: email, presence:     true,
                    uniqueness:   true,
                    email_format: true

  # == Scopes ===============================================================

  # == Callbacks ============================================================

  # == Class Methods ========================================================
  
  def self.for_select
    all.collect{|u| [“#{u.name} (#{u.email})”, u.id]}
  end

  # == Instance Methods =====================================================


---
Appunti

views/posts/show
—
<%= @post.user.email.split(‘@‘)[0].capitalize %>
—

#@post.user.email —> flavio@test.abc

#@post.user.email.split(‘@‘) —> [flavio, test.abc]

#@post.user.email.split(‘@‘)[0] —> flavio

#@post.user.email.split(‘@‘)[0].capitalize —> Flavio


**************

views/models/user.rb
—
def username
	return self.email.split(‘@‘)[0].capitalize
end
—

views/posts/show
—
<%= @post.user.username %>
—
