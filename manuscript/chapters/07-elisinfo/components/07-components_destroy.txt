# Distruggiamo componente




## Apriamo il branch "components destroy"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b cd
~~~~~~~~




## Distruggiamo il componente

Sul panel_destroy di components/edit implementiamo il link di eliminazione del record. Non uso il link con il codice javascript implementato magicamente da rails per permettere di passare il comando via "destroy". Invece uso un form così posso passare anche tutti i parametri nell'URL sfruttando i campi nascosti. Come abbiamo già fatto per _form. 

{title=".../app/views/components/edit.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=52}
~~~~~~~~
          <%= render 'pane_delete', component: @component %>
~~~~~~~~

{title=".../app/views/components/_pane_delete.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<%= form_for(component, method: :delete, html: {class: 'form-horizontal left-pad right-pad bottom-pad'}) do |f| %>

  <!-- # simulo l'helper h_params_path -->
  <%= hidden_field_tag(:locale, params[:locale]) %>
  <%= hidden_field_tag(:last_front_controller, params[:last_front_controller]) %>
  <%= hidden_field_tag(:last_front_action, params[:last_front_action]) %>
  <%= hidden_field_tag(:last_front_id, params[:last_front_id]) %>  
  <%= hidden_field_tag(:last_front_related, params[:last_front_related]) %>  
  <%= hidden_field_tag(:last_front_page, params[:last_front_page]) %>  
  <%= hidden_field_tag(:last_front_search, params[:last_front_search]) %>  
  <%= hidden_field_tag(:last_rear_controller, params[:last_rear_controller]) %>
  <%= hidden_field_tag(:last_rear_action, params[:last_rear_action]) %>
  <%= hidden_field_tag(:last_rear_id, params[:last_rear_id]) %>
  <%= hidden_field_tag(:last_rear_related, params[:last_rear_related]) %>
  <%= hidden_field_tag(:last_rear_page, params[:last_rear_page]) %>
  <%= hidden_field_tag(:last_rear_search, params[:last_rear_search]) %>
  <%= hidden_field_tag(:related, params[:related]) %>
  <%= hidden_field_tag(:page, params[:page]) %>
  <%= hidden_field_tag(:search, params[:search]) %>
  <%= hidden_field_tag(:tab_active, params[:tab_active]) %>

  <div class="actions">
    <%= f.submit "#{t "components.edit.submit_destroy"}", class: "btn btn-primary btn-block" %>
  </div>
<% end %>
~~~~~~~~




## Implementiamo il controller

Impostiamo il passaggio di tutti i parametri nell'url nella eliminazione del componente. Quindi modifichiamo il redirect_to dell'azione **destroy** a seguito del corretto delete dei dati nel database. Poiché dopo l'eliminazione di un componente ci spostiamo direttamente sull'homepage, impostiamo corrispondentemente anche il last_front_controller, last_front_action e last_front_id. Inoltre gli diciamo di presentare inizialmente l'elenco "components". 

{title=".../app/controllers/components_controller.rb", lang=ruby, line-numbers=on, starting-line-number=63}
~~~~~~~~
      format.html { redirect_to url_for(view_context.h_params_path(path: "/homepage/", related: "components", page: 1, search: "")), notice: t(".notice") }
~~~~~~~~




## Impostiamo la traduzione (in18)

implementiamo la traduzione in italiano

{title="config/locales/it.yml", lang=yaml, line-numbers=on, starting-line-number=28}
~~~~~~~~
  components:
    destroy:
      notice: "Componente eliminato con successo."
~~~~~~~~

implementiamo la traduzione in inglese

{title="config/locales/en.yml", lang=yaml, line-numbers=on, starting-line-number=24}
~~~~~~~~
  components:
    destroy:
      notice: "Component was successfully destroyed."
~~~~~~~~


aggiorniamo git 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add components destroy"
~~~~~~~~




## Publichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku cd:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge cd
$ git branch -d cd
~~~~~~~~




## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~
