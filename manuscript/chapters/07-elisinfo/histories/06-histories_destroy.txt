# Elimina storia 

La cancellazione delle storie ha la stessa implementazione sia per una specifica persona, sia per una specifica azienda.
in questo capitolo tratteremo l'eliminazione delle storie (dal view histories/edit) relateds della pagina people/show e della pagina companies/show.




## Apriamo il branch "Histories Destroy"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b hd
~~~~~~~~




## Lato Person

eliminiamo una storia a partire dai relateds della persona. In realtà non cambia niente da quale lato si parte perché l'eliminazione è fatta sul view histories/edit.




## Histories/edit Distruggiamo il contatto

Sul panel_destroy di histories/edit implementiamo il link di eliminazione del record. Non uso il link con il codice javascript implementato magicamente da rails per permettere di passare il comando via "destroy". Invece uso un form così posso passare anche tutti i parametri nell'URL sfruttando i campi nascosti. Come abbiamo già fatto per _form. 

{title=".../app/views/histories/edit.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=37}
~~~~~~~~
          <%= render 'pane_delete', history: @history %>
~~~~~~~~

{title=".../app/views/histories/_pane_delete.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<%= form_for(history, method: :delete, html: {class: 'form-horizontal left-pad right-pad bottom-pad'}) do |f| %>

  <!-- # simulo l'helper h_params_path -->
  <%= hidden_field_tag(:locale, params[:locale]) %>
  <%= hidden_field_tag(:last_front_controller, params[:last_front_controller]) %>
  <%= hidden_field_tag(:last_front_action, params[:last_front_action]) %>
  <%= hidden_field_tag(:last_front_id, params[:last_front_id]) %>  
  <%= hidden_field_tag(:last_front_related, params[:last_front_related]) %>  
  <%= hidden_field_tag(:last_front_page, params[:last_front_page]) %>  
  <%= hidden_field_tag(:last_front_search, params[:last_front_search]) %>  
  <%= hidden_field_tag(:last_rear_controller, params[:last_rear_controller]) %>
  <%= hidden_field_tag(:last_rear_action, params[:last_rear_action]) %>
  <%= hidden_field_tag(:last_rear_id, params[:last_rear_id]) %>
  <%= hidden_field_tag(:last_rear_related, params[:last_rear_related]) %>
  <%= hidden_field_tag(:last_rear_page, params[:last_rear_page]) %>
  <%= hidden_field_tag(:last_rear_search, params[:last_rear_search]) %>
  <%= hidden_field_tag(:related, params[:related]) %>
  <%= hidden_field_tag(:page, params[:page]) %>
  <%= hidden_field_tag(:search, params[:search]) %>
  <%= hidden_field_tag(:tab_active, params[:tab_active]) %>

  <div class="actions">
    <%= f.submit "#{t "histories.edit.submit_destroy"}", class: "btn btn-primary btn-block" %>
  </div>
<% end %>
~~~~~~~~




## Implementiamo il controller

Impostiamo il passaggio di tutti i parametri nell'url nella creazione della nuova persona. Quindi modifichiamo il redirect_to dell'azione **create** a seguito del corretto salvataggio dei dati nel database. Poiché dopo la creazione di una nuova persona ci spostiamo direttamente sul suo show, impostiamo corrispondentemente anche il last_front_controller, last_front_action e last_front_id. Inoltre gli diciamo di presentare inizialmente l'elenco "favorites". 

{title=".../app/controllers/contacts_controller.rb", lang=ruby, line-numbers=on, starting-line-number=63}
~~~~~~~~
      format.html { redirect_to url_for(view_context.h_params_path(path: "/#{params[:last_front_controller]}/#{params[:last_front_id]}", related: params[:last_front_related], page: params[:last_front_page], search: params[:last_front_search])), notice: 'History was successfully destroyed..' }
      #format.html { redirect_to histories_url, notice: 'History was successfully destroyed.' }
~~~~~~~~




## I18n

implementiamo la traduzione in italiano

{title="config/locales/it.yml", lang=yaml, line-numbers=on, starting-line-number=30}
~~~~~~~~
  histories:
    edit:
      submit_destroy: "Elimina storia"
~~~~~~~~

implementiamo la traduzione in inglese

{title="config/locales/en.yml", lang=yaml, line-numbers=on, starting-line-number=30}
~~~~~~~~
  histories:
    edit:
      submit_destroy: "Delete history"
~~~~~~~~


aggiorniamo git 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add history destroy"
~~~~~~~~




## Lato Azienda

eliminiamo una storia a partire dai relateds dell'azienda. Abbiamo già fatto tutto lavorando lato persona.




## Publichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku hd:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge hd
$ git branch -d hd
~~~~~~~~




## Backup su github

facciamo un backup del ns progetto su github:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~

