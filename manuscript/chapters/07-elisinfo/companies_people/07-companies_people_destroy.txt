# Distruggiamo persona e azienda




## Apriamo il branch "companies people destroy"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b cpd
~~~~~~~~




## Distruggiamo la persona

Sul panel_destroy di people/edit implementiamo il link di eliminazione del record. Non uso il link con il codice javascript implementato magicamente da rails per permettere di passare il comando via "destroy". Invece uso un form così posso passare anche tutti i parametri nell'URL sfruttando i campi nascosti. Come abbiamo già fatto per _form. 

{title=".../app/views/people/edit.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=37}
~~~~~~~~
          <%= render 'pane_delete', person: @person %>
~~~~~~~~

{title=".../app/views/people/_pane_delete.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<%= form_for(person, method: :delete, html: {class: 'form-horizontal left-pad right-pad bottom-pad'}) do |f| %>

  <!-- # simulo l'helper h_params_path -->
  <%= hidden_field_tag(:locale, params[:locale]) %>
  <%= hidden_field_tag(:last_front_controller, params[:last_front_controller]) %>
  <%= hidden_field_tag(:last_front_action, params[:last_front_action]) %>
  <%= hidden_field_tag(:last_front_id, params[:last_front_id]) %>  
  <%= hidden_field_tag(:last_front_related, params[:last_front_related]) %>  
  <%= hidden_field_tag(:last_front_page, params[:last_front_page]) %>  
  <%= hidden_field_tag(:last_front_search, params[:last_front_search]) %>  
  <%= hidden_field_tag(:last_rear_controller, params[:last_rear_controller]) %>
  <%= hidden_field_tag(:last_rear_action, params[:last_rear_action]) %>
  <%= hidden_field_tag(:last_rear_id, params[:last_rear_id]) %>
  <%= hidden_field_tag(:last_rear_related, params[:last_rear_related]) %>
  <%= hidden_field_tag(:last_rear_page, params[:last_rear_page]) %>
  <%= hidden_field_tag(:last_rear_search, params[:last_rear_search]) %>
  <%= hidden_field_tag(:related, params[:related]) %>
  <%= hidden_field_tag(:page, params[:page]) %>
  <%= hidden_field_tag(:search, params[:search]) %>
  <%= hidden_field_tag(:tab_active, params[:tab_active]) %>

  <div class="actions">
    <%= f.submit "#{t "people.edit.submit_destroy"}", class: "btn btn-primary btn-block" %>
  </div>
<% end %>
~~~~~~~~




## Implementiamo il controller

Impostiamo il passaggio di tutti i parametri nell'url nella creazione della nuova persona. Quindi modifichiamo il redirect_to dell'azione **create** a seguito del corretto salvataggio dei dati nel database. Poiché dopo la creazione di una nuova persona ci spostiamo direttamente sul suo show, impostiamo corrispondentemente anche il last_front_controller, last_front_action e last_front_id. Inoltre gli diciamo di presentare inizialmente l'elenco "favorites". 

{title=".../app/controllers/people_controller.rb", lang=ruby, line-numbers=on, starting-line-number=63}
~~~~~~~~
      format.html { redirect_to url_for(view_context.h_params_path(path: "/homepage/", related: "people", page: 1, search: "")), notice: 'Person was successfully destroyed.' }
~~~~~~~~


aggiorniamo git 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add people destroy"
~~~~~~~~




## Passiamo al lato Aziende




## Distruggiamo l'azienda

Sul panel_destroy di people/edit implementiamo il link di eliminazione del record. Non uso il link con il codice javascript implementato magicamente da rails per permettere di passare il comando via "destroy". Invece uso un form così posso passare anche tutti i parametri nell'URL sfruttando i campi nascosti. Come abbiamo già fatto per _form. 

{title=".../app/views/companies/edit.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=38}
~~~~~~~~
          <%= render 'pane_delete', company: @company %>
~~~~~~~~

{title=".../app/views/companies/_pane_delete.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<%= form_for(company, method: :delete, html: {class: 'form-horizontal left-pad right-pad bottom-pad'}) do |f| %>

  <!-- # simulo l'helper h_params_path -->
  <%= hidden_field_tag(:locale, params[:locale]) %>
  <%= hidden_field_tag(:last_front_controller, params[:last_front_controller]) %>
  <%= hidden_field_tag(:last_front_action, params[:last_front_action]) %>
  <%= hidden_field_tag(:last_front_id, params[:last_front_id]) %>  
  <%= hidden_field_tag(:last_front_related, params[:last_front_related]) %>  
  <%= hidden_field_tag(:last_front_page, params[:last_front_page]) %>  
  <%= hidden_field_tag(:last_front_search, params[:last_front_search]) %>  
  <%= hidden_field_tag(:last_rear_controller, params[:last_rear_controller]) %>
  <%= hidden_field_tag(:last_rear_action, params[:last_rear_action]) %>
  <%= hidden_field_tag(:last_rear_id, params[:last_rear_id]) %>
  <%= hidden_field_tag(:last_rear_related, params[:last_rear_related]) %>
  <%= hidden_field_tag(:last_rear_page, params[:last_rear_page]) %>
  <%= hidden_field_tag(:last_rear_search, params[:last_rear_search]) %>
  <%= hidden_field_tag(:related, params[:related]) %>
  <%= hidden_field_tag(:page, params[:page]) %>
  <%= hidden_field_tag(:search, params[:search]) %>
  <%= hidden_field_tag(:tab_active, params[:tab_active]) %>

  <div class="actions">
    <%= f.submit "#{t "companies.edit.submit_destroy"}", class: "btn btn-primary btn-block" %>
  </div>
<% end %>
~~~~~~~~

implementiamo la traduzione in italiano

{title="config/locales/it.yml", lang=yaml, line-numbers=on, starting-line-number=30}
~~~~~~~~
  companies:
    show:
      breadcrumbs: "Azienda"
    edit:
      submit_destroy: "Elimina azienda"
~~~~~~~~

implementiamo la traduzione in inglese

{title="config/locales/en.yml", lang=yaml, line-numbers=on, starting-line-number=30}
~~~~~~~~
  companies:
    show:
      breadcrumbs: "Company"
    edit:
      submit_destroy: "Delete company"
~~~~~~~~




## Implementiamo il controller

Impostiamo il passaggio di tutti i parametri nell'url nella creazione della nuova persona. Quindi modifichiamo il redirect_to dell'azione **create** a seguito del corretto salvataggio dei dati nel database. Poiché dopo la creazione di una nuova persona ci spostiamo direttamente sul suo show, impostiamo corrispondentemente anche il last_front_controller, last_front_action e last_front_id. Inoltre gli diciamo di presentare inizialmente l'elenco "favorites". 

{title=".../app/controllers/companies_controller.rb", lang=ruby, line-numbers=on, starting-line-number=61}
~~~~~~~~
      format.html { redirect_to url_for(view_context.h_params_path(path: "/homepage/", related: "companies", page: 1, search: "")), notice: 'Company was successfully destroyed.' }
~~~~~~~~


aggiorniamo git 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add companies destroy"
~~~~~~~~




## Publichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku cpd:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge cpd
$ git branch -d cpd
~~~~~~~~




## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~
