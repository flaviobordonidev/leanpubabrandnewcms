# Indirizzi lato azienda




## Implementiamo gli indirizzi nella view companies/new e companies/edit


Introduciamo subito il partial **address_fields**

{title=".../app/views/companies/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=75}
~~~~~~~~
    <%= f.fields_for :addresses do |builder| %>
        <%= render "address_fields", f: builder %>
    <% end %>
    <%= link_to_add_fields "Add Address", f, :addresses %>
~~~~~~~~

{title=".../app/views/companies/_address_fields.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=20}
~~~~~~~~
<fieldset>
  <%= f.label :line1, "Indirizzo" %><br/>
  <%= f.text_field :line1 %><br/><br/>
  <%= f.text_field :line2 %><br/><br/>
  <%= f.text_field :line3 %><br/><br/>

  <%= f.label :locality, " Città - CAP - Provincia - Paese" %><br/>
  <%= f.text_field :locality %>
  <%= f.label :postcode, " -" %>
  <%= f.text_field :postcode %>
  <%= f.label :region, " -" %>
  <%= f.text_field :region %>
  <%= f.label :country, " -" %>
  <%= f.text_field :country %><br/>

  <%= f.hidden_field :_destroy %>
  <%= link_to "Elimina indirizzo", "#", class: "remove_fields" %>
</fieldset>
~~~~~~~~

la parte di codice ** <%= f.fields_for :addresses do |builder| %> ... <% end %> ** ci permette di aggiungere il modello address dentro il form di companies.

Ma ancora non funziona perché non è stato istanziato nessun indirizzo. Risolviamo aggiungendo un indirizzo nell'azione **new** del controller **companies_controller**


{title=".../app/controllers/companies_controller.rb", lang=ruby, line-numbers=on, starting-line-number=35}
~~~~~~~~
  # GET /companies/new
  def new
    @company = Company.new
    @company.name = params[:last_front_search]
    @company.company_contacts.build
    @company.addresses.build
  end
~~~~~~~~

L'indirizzo è istanziato con ** @company.addresses.build **

Se adesso torniamo sul browser e diamo un refresh vediamo che funziona? Si ma a metà. Visualizza i campi nel form ma non prende i valori sul submit. Questo perché dobbiamo abilitare i valori del modello annidato (address) sul controller del padre (companies_controller). Ed inoltre non abbiamo implementato la visualizzazione su companies/show. 

{title=".../app/controllers/companies_controller.rb", lang=ruby, line-numbers=on, starting-line-number=109}
~~~~~~~~
    # Never trust parameters from the scary internet, only allow the white list through.
    def company_params
      params.require(:company).permit(:logo, :name, :sector, :status, :corporate, :taxation_number_first, :taxation_number_second, :memo, :favorite_id_user, :favorite_cb_user, company_contacts_attributes: [:id, :medium, :identifier, :_destroy], addresses_attributes: [:id, :line1, :line2, :line3, :locality, :postcode, :region, :country, :_destroy])
    end
~~~~~~~~

Adesso funziona. (anche se ancora non le vediamo perché la visualizzazione la implementiamo nel prossimo paragrafo)




## Visualizziamo gli indirizzi

lavoriamo sulla view companies/show per visualizzare gli indirizzi (addresses)

{title=".../app/views/companies/_main_media_object.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=21}
~~~~~~~~
      <ul>
        <% @company.addresses.each do |address| %>
          <li>
            <%= "#{address.line1} - #{address.line2} - #{address.line3}" %><br></br>
            <%= "#{address.locality} - #{address.postcode} - #{address.region} - #{address.country}" %>
          </li>
        <% end %>
      </ul>
~~~~~~~~




## Eliminamo dati vuoti

Implementiamo il codice per non inserire gli indirizzi in elenco se non hanno dati su line1.

{title=".../app/models/company.rb", lang=ruby, line-numbers=on, starting-line-number=33}
~~~~~~~~
  has_many :addresses, as: :addressable, inverse_of: :addressable, dependent: :destroy
  accepts_nested_attributes_for :addresses, reject_if: lambda { |a| a[:line1].blank? }
~~~~~~~~

Con il ** :reject_if ** ottengo che i valori di :line1 vuoti non vengano caricati in tabella.




## Implementiamo il link di eliminazione

Abbiamo già inserito il link "Elimina contatto" ed il campo nascosto per passare **_destroy** come params.

{title=".../app/views/companies/_address_fields.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=6}
~~~~~~~~
  <%= f.hidden_field :_destroy %>
  <%= link_to "Elimina indirizzo", "#", class: "remove_fields" %>
~~~~~~~~

Inoltre abbiamo già abilitato l'eliminazione sul model con ** :allow_destroy ** e permesso il parametro sulla white-list nel controller con ** addresses_attributes: [..., :_destroy] **.

{title=".../app/models/company.rb", lang=ruby, line-numbers=on, starting-line-number=23}
~~~~~~~~
  has_many :addresses, as: :addressable, inverse_of: :addressable, dependent: :destroy
  accepts_nested_attributes_for :addresses, reject_if: lambda { |a| a[:line1].blank? }, allow_destroy: true
~~~~~~~~

{title=".../app/controllers/companies_controller.rb", lang=ruby, line-numbers=on, starting-line-number=109}
~~~~~~~~
    # Never trust parameters from the scary internet, only allow the white list through.
    def company_params
      params.require(:company).permit(:logo, :name, :sector, :status, :corporate, :taxation_number_first, :taxation_number_second, :memo, :favorite_id_user, :favorite_cb_user, company_contacts_attributes: [:id, :medium, :identifier, :_destroy], addresses_attributes: [:id, :line1, :line2, :line3, :locality, :postcode, :region, :country, :_destroy])
    end
~~~~~~~~

Adesso scriviamo il codice javascript

{title=".../app/assets/javascripts/companies.js.coffe", lang=ruby, line-numbers=on, starting-line-number=5}
~~~~~~~~
$(document).on "turbolinks:load", ->
  $('form').on 'click', '.remove_fields', (event) ->
    $(this).prev('input[type=hidden]').val('1')
    $(this).closest('fieldset').hide()
    event.preventDefault()
~~~~~~~~

Funziona!!!
Il codice lo abbiamo già analizzato nel capitolo contacts_side_person.





## Link per aggiungere un nuovo contatto

{title=".../app/views/companies/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=72}
~~~~~~~~
    <%= f.fields_for :company_contacts do |builder| %>
        <%= render "company_contact_fields", f: builder %>
    <% end %>
    <%= link_to_add_fields "Add Contact", f, :company_contacts %>
~~~~~~~~

ATTENZIONE!!! il nome del partial DEVE chiamarsi **<<association-singular>>_fields** nel nostro caso **address_fields**. Se lo chiamo in maniera diversa il codice successivo non lavora correttamente e non carica i valori nel database quando si fa il submit del form.

Abbiamo già creato nei capitoli precedenti l'helper ** link_to_add_fields ** sull'application_helper.




## il javascript

una volta preparato il codice lato view andiamo a scrivere il jquery lato assets. Di seguito a quanto scritto in precedenza aggiungiamo il seguente codice:

{title=".../app/assets/javascripts/companies.js.coffe", lang=CoffeeScript, line-numbers=on, starting-line-number=5}
~~~~~~~~
$(document).on "turbolinks:load", ->
~~~~~~~~

...

{title=".../app/assets/javascripts/companies.js.coffe", lang=CoffeeScript, line-numbers=on, starting-line-number=11}
~~~~~~~~
  #$('form').on 'click', '.add_fields', (event) ->
  $(this).on 'click', (event) ->
    regexp = new RegExp($(this).data('id'), 'g')
    $(this).before($(this).data('fields').replace(regexp, time))
    event.preventDefault()
~~~~~~~~

Abbiamo dovuto cambiare la chiamata dell'evento perché ** $('form').on 'click', '.add_fields', (event) -> ** mi creava due volte i nuovi campi perché trovava due links con classe .add_fields (uno per i contatti ed uno per gli indirizzi).
Specificando invece che il click è per l'oggetto dove clicca il puntatore del mouse evito la duplicazione dei campi.


aggiorniamo git 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add addresses side company"
~~~~~~~~




## Publichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku as:master
$ heroku run rake db:migrate
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge as
$ git branch -d as
~~~~~~~~




## Backup su github

facciamo un backup del ns progetto su github:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~
