# Paginazione su pagina di selezione entità (pagination)

iniziamo attivando il search ed il pagination con l'elenco completo a prescindere dalla pagina chiamante (non usiamo i bln_entities e bln_documents).

PURTROPPO WILL_PAGINATE è rimasto fermo. Meglio passare a Kaminari.


## Apriamo il branch "SelectRelated Pagination"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b srp
~~~~~~~~




## Pagination con Kaminari

Will_paginate

Per dividere l'elenco su più pagine usiamo la gemma will_paginate.




## Installiamo will_paginate

per installarlo dobbiamo aggiungerlo nel Gem file. Facciamo riferimento al [sito ufficiale di will_paginate]https://github.com/mislav/will_paginate/wiki) e mettiamo nel Gemfile l'[ultima versione disponibile](https://rubygems.org/gems/will_paginate).


[01:](#code-companies_people-select_relateds_pagination-01)

{title=".../Gemfile", lang=ruby, line-numbers=on, starting-line-number=50}
~~~~~~~~
# a simple API for performing paginated queries with Active Record including helpers for rendering pagination links. 
gem 'will_paginate', '~> 3.1', '>= 3.1.5'
~~~~~~~~

Installiamo

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ bundle install
~~~~~~~~




## Usiamo will_paginate

informiamo il controller di usare il metodo di will_paginate ".page(params[:page])"

[02:](#code-companies_people-select_relateds_pagination-02)

{title=".../app/controllers/select_relateds_controller.rb", lang=ruby, line-numbers=on, starting-line-number=8}
~~~~~~~~
@select_relateds = SelectRelated.search(params[:search]).order('name ASC').page(params[:page]).per_page(2)
~~~~~~~~

Per testare visualizziamo solo 2 records per ogni pagina con ** .per_page(2) **
Nell'applicazione reale visualizzeremo 6 records per ogni pagina perché uno studio di usabilità ha evidenziato che sei records riescono ad essere interpretati senza spostare lo sguardo e che scorrere la lista spesso distrae. Inoltre sei records riescono ad entrare comodamente sullo schermo di uno smartphone. 

Poiché noi abbiamo 3 elementi (favorites, people, companies) si visualizzeranno solo i primi due. Per vedere il terzo ci possiamo spostare di pagina mettendo nell'url ** &page=2 **
 
verifichiamo che funziona tutto aggiungendo ** page=2 ** sull'url

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s -b $IP -p $PORT
~~~~~~~~

https://elisinfo5-flaviobordonidev.c9users.io/select_relateds?locale=en
https://elisinfo5-flaviobordonidev.c9users.io/select_relateds?locale=en&page=2
https://elisinfo5-flaviobordonidev.c9users.io/select_relateds?locale=en&page=1




##  Attiviamo i links per scorrere la paginazione

togliamo il mockup_pagination ed implementiamo il partial con i link per scorrere in avanti ed in dietro tra la paginazione.

{title="views/select_relateds/index.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=38}
~~~~~~~~
<%= render 'select_relateds/pagination', list_to_paginate: @select_relateds %>
~~~~~~~~

{title="views/select_relateds/_pagination.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=4}
~~~~~~~~
<div class="text-center">
  <ul class="pagination ">
    
    <% if list_to_paginate.previous_page %>
      <li>
        <%#= link_to "«", params.merge(page: list_to_paginate.previous_page) %>
        <%= link_to "«", url_for(h_params_path(page: list_to_paginate.previous_page)) %>
      </li>
    <% else %>
      <li class="disabled">
        <%= content_tag :span,"«"  %>
      </li>
    <% end %>
    
    <li class="active">
      <%= content_tag :span,"#{list_to_paginate.current_page} di #{list_to_paginate.total_pages}" %>
    </li>
    
    <% if list_to_paginate.next_page %>
      <li>
        <%#= link_to "»", params.merge(page: list_to_paginate.next_page) %>
        <%= link_to "»", url_for(h_params_path(page: list_to_paginate.next_page)) %>
      </li>
    <% else %>
      <li class="disabled">
        <%= content_tag :span,"»" %>
      </li>
    <% end %>

  </ul>
</div>
~~~~~~~~

Aggiungiamo il params[:page] sull'helper globale h_params_path

{title=".../app/helpers/application_helper.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
module ApplicationHelper

  # per l'uso di "optional arguments" ringrazio http://codeloveandboards.com/blog/2014/02/05/ruby-and-method-arguments/
  def h_params_path(path: "", locale: params[:locale], last_front_controller: params[:last_front_controller], last_front_action: params[:last_front_action], related: params[:related], page: params[:page])
    path_url = "#{path}?locale=#{locale}&last_front_controller=#{last_front_controller}&last_front_action=#{last_front_action}&related=#{related}&page=#{page}"
    return path_url
  end

end
~~~~~~~~

Ed aggiungiamo l'inizializzazione del params[:page] sul controller homepage

{title=".../app/controllers/homepage_controller.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class HomepageController < ApplicationController

  before_action :authenticate_user!

  def index
    # current_user is generated by the gem "devise" and contain the logged user. es: User.find(current_user.id)
    @user = current_user

    params[:locale] = "it" if params[:locale].blank?
    params[:last_front_controller] = "homepage" if params[:last_front_controller].blank?
    params[:last_front_action] = "index" if params[:last_front_action].blank?
    params[:related] = "favorites" if params[:related].blank?
    params[:page] = 1 if params[:page].blank?
  end
  
end
~~~~~~~~


verifichiamo che funziona tutto 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s -b $IP -p $PORT
~~~~~~~~

https://elisinfo5-flaviobordonidev.c9users.io/select_relateds


{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add pagination"
~~~~~~~~




## Publichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku srp:master

$ heroku run rake db:migrate
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge srp
$ git branch -d srp
~~~~~~~~
