# Enum


Risorse interne:

* vedi 01-base/10-roles/03-roles-enum
* vedi 52-rebisworld/04-post_paragraphs-nested_forms/04-enum_paragraph_style
* vedi 99-rails_references/views/data_types/select-collection_select


Risorse web:

* [ActiveRecord::Enum](https://api.rubyonrails.org/v5.2.3/classes/ActiveRecord/Enum.html)
* [Enums with Rails & ActiveRecord: an improved way](https://sipsandbits.com/2018/04/30/using-database-native-enums-with-rails/)
* [QUERIES ON RAILS - SHOWCASING ACTIVE RECORD AND AREL](https://www.imaginarycloud.com/blog/queries-on-rails/)




## Esempi di query sfruttando enums


$ rails c
-> User.where(role: :admin)
-> User.admin
-> User.first.admin?

-> User.where(role: :author)
-> User.author
-> User.first.author?

-> User.where(role: [:admin, :author])
-> User.where(role: [:admin, :author]).order(:name)


Spieghiamo:

Le seguenti due query sono identiche e selezionano tutti gli utenti con ruolo di amministratori:

-> User.where(role: :admin)
-> User.admin

La seguente query verifica se il primo utente Ã¨ un amministratore

-> User.first.admin?

La seguente query seleziona tutti gli utenti con ruolo di amministratore o di autore:

-> User.where(role: [:admin, :author])

Stessa cosa ma in ordine alfabetico di nome utente

-> User.where(role: [:admin, :author]).order(:name)

