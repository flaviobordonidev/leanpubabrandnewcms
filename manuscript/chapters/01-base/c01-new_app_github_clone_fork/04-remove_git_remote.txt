# Cambiamo i collegamenti ai repository remoti di Git

questa versione clonata ha ovviamente il riferimento di Git alla stessa repository esterna su GitHub di " s5beginning ".
Siccome noi vogliamo creare un'applicazione differente è fondamentale rimuovere i collegamenti alla repository su GitHub. Ne creeremo in seguito una nuova.


Risorse web

* [Removing a remote](https://help.github.com/en/articles/removing-a-remote)
* [Changing a remote's URL](https://help.github.com/en/articles/changing-a-remotes-url)




## Rimuoviamo repository remoto

Verifichiamo i repositories remoti presenti sul nostro Git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git remote -v


ubuntu:~/environment/s5cmsbeginning (master) $ git remote -v
origin  git@github.com:flaviobordonidev/s5beginning.git (fetch)
origin  git@github.com:flaviobordonidev/s5beginning.git (push)
~~~~~~~~

L'unico che si presenta è "origin", che è quello su GitHub. Non si presenta quello di Heroku perché non è un vero repository remoto ma è un modo di mandare in produzione l'applicazione sfruttando Git.


Rimuoviamo/scolleghiamo il repository remoto "origin"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git remote rm origin


ubuntu:~/environment/s5cmsbeginning (master) $ git remote rm origin
ubuntu:~/environment/s5cmsbeginning (master) $ 
~~~~~~~~


Verifichiamo che il repository remoto "origin" è stato scollegato

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git remote -v


ubuntu:~/environment/s5cmsbeginning (master) $ git remote -v
ubuntu:~/environment/s5cmsbeginning (master) $ 
~~~~~~~~

Adesso nei prossimi capitoli possiamo tranquillamente creare dei branches ed usare Git localmente senza temere di attrapagliare l'applicazione che abbiamo clonato ( s5beginning ).
