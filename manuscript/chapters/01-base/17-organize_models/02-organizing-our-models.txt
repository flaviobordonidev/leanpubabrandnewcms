# Organizziamo i nostri Modelli

Impostiamo i "divisori" visti nel metodo di organizzazione




## Apriamo il branch "Organize Models"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b om
~~~~~~~~




## EgCompany

{id="01-14-02_01", title=".../app/models/eg_company.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class EgCompany < ApplicationRecord
  # == Constants ============================================================
  
  # == Extensions ===========================================================

  # == Attributes ===========================================================

  # == Relationships ========================================================

  # == Validations ==========================================================

  # == Scopes ===============================================================

  # == Callbacks ============================================================

  # == Class Methods ========================================================

  # == Instance Methods =====================================================

end
~~~~~~~~

[Codice 01](#01-14-02_01all)




## EgPost

{title=".../app/models/example_post.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class EgPost < ApplicationRecord
  # == Constants ============================================================
  
  # == Extensions ===========================================================

  # == Attributes ===========================================================

  ## Active Storage
  has_one_attached :header_image

  # == Relationships ========================================================

  belongs_to :user

  # == Validations ==========================================================

  # == Scopes ===============================================================

  # == Callbacks ============================================================

  # == Class Methods ========================================================

  # == Instance Methods =====================================================

end
~~~~~~~~



## EgUser

{title=".../app/models/example_user.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class EgUser < ApplicationRecord
  # == Constants ============================================================
  
  # == Extensions ===========================================================

  # == Attributes ===========================================================

  # == Relationships ========================================================

  # == Validations ==========================================================

  # == Scopes ===============================================================

  # == Callbacks ============================================================

  # == Class Methods ========================================================

  # == Instance Methods =====================================================

end
~~~~~~~~




## User

{title=".../app/models/user.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class User < ApplicationRecord

  # == Constants ============================================================
  
  # == Extensions ===========================================================

  # == Attributes ===========================================================

  #enum role: [:user, :admin, :moderator, :author]
  enum role: {user: 0, admin: 1, moderator:2, author:3}

  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :registerable, :timeoutable, :trackable and :omniauthable
  devise :database_authenticatable,
         :recoverable, :rememberable, :validatable

  # == Relationships ========================================================

  has_many :eg_posts

  # == Validations ==========================================================

  # == Scopes ===============================================================

  # == Callbacks ============================================================

  # == Class Methods ========================================================

  # == Instance Methods =====================================================

end
~~~~~~~~








## archiviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "organize models"
~~~~~~~~




## Publichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku om:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge om
$ git branch -d om
~~~~~~~~




## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~




## Il codice del capitolo




[Codice 01](#01-14-02_01)

{id="01-14-02_01all", title="Gemfile", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
~~~~~~~~
