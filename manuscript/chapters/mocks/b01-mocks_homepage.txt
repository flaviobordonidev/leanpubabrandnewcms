# mock homepage

Bozzetto dell'applicazione: Mock-ups.




## overview {#references-mocks_web_dev-overview}

Il mock di un sito web normalmente viene fatto su carta con una matita, oppure su powerpoint, o su photoshop, o su coreldraw, o su programmi dedicati ai mock di database.
In questa fase abbiamo già un mock preparato. Quello che qui chiamo mock sono delle pagine statiche su rails su cui già programmo l'output del mio web app sfruttando bootstrap 3. Quindi già preparo tutta la parte di CSS ed inizio anche a raggruppare le view in partials in modo da avere anche la struttura della mia web app.
In seguito creeremo le pagine dinamiche che prendono le informazioni dal database. Creeremo i presenters per mantenere snelle le view e "pulite" dalla parte logica della programmazione.

Questo scheletro che creiamo con il "mock" non è uno stampo che poi getto via. Lo lascio nell'applicazione perché è utilissimo per successive modifiche o manutenzioni. E' una parte che continuerò ad aggiornare e ad utilizzare e mi permetterà di passare agevolmente ad esempio a bootstrap 4 oppure mi permette di implementare nuove funzionalità in maniera più "scalabile". Implemento il mock e verifico che tutto funziona. Poi sposto il mock sulle pagine dinamiche e vedo che tutto funziona. Poi creo i presenters per la nuova funzionalità. Poi mi aggangio al database e faccio le nuove migration con le modifiche da apportare al db. Poi implemento la logica più complessa e la validazione dei moduli. Infine implemento i Test con rspec.

Il mock è un ottimo punto di partenza ed è anche un elemento che permette di fare da ponte tra il team di web developpers e quello dei web designers.




Prendo il dentro del <body> di index_magazine.html e lo metto su views/mocks/index_magazine.html.erb, tolgo la chiamata javascript a function e lo divido in vari partials che metto nella cartella views/mocks/index_magazine/...

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "make index_magazine partials"
~~~~~~~~

