# disqus

Attiviamo la possibilità di commentare. Non implementiamo una nostra gestione dei commenti perché diventa complesso gestire lo spam.
Molto meglio un plugin di facebook oppure Disqus.

Risorse web:

* [How to build a blog with Rails 5 and Bootstrap 4 - Part 10](https://www.youtube.com/watch?v=bQrgjo3gp10)
* [How to Install Disqus Manually Using the Universal Code](https://www.youtube.com/watch?time_continue=179&v=Dr6pSdeJgkA)


## Apriamo il branch "Disqus Commens"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b dc
~~~~~~~~




## Installiamo Disqus

Non serve nessuna gemma e nessun campo nel database. Basta inserire un codice generato dal sito [disqus.com](https://disqus.com/)






## Creiamo un account in Disqus

https://disqus.com/profile/signup/

Nome
Email
password

Una volta creato l'account seguire per l'installazione nel proprio sito

"I want to install Disqus on my site"

![Fig. 01](images/01-beginning/01-new_app/05_01-preview-working.png)



## Registriamo un nuov site su Disqus

Attenzione! Se proviamo a registrare il nostro website di test (https://mycloud9path.amazonaws.com/) prende errore!
Lo possiamo usare solo per il nostro sito in produzione. Rivediamo il dominio della nostra app su Heroku.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ heroku domains


ec2-user:~/environment/myapp (dc) $ heroku domains
=== myapp-1-blabla Heroku Domain
myapp-1-blabla.herokuapp.com
~~~~~~~~


Inseriamo il nostro sito web e seguiamo la procedura guidata.

Step1. 

Step2. Scegliamo il piano free

Step3. Scegliamo l'ultima voce: "non vedo la mia piattaforma listata, installo manualmente"

  What platform is your site on?
  
  I don't see my platform listed, install manually with Universal Code
  
  https://www-rebisworld-com.disqus.com/admin/install/platforms/universalcode/


copiamo il codice dove vogliamo i commenti.

~~~~~~~~
<div id="disqus_thread"></div>
<script>

/**
*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/
/*
var disqus_config = function () {
this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');
s.src = 'https://myapp-1-blabla-herokuapp-com.disqus.com/embed.js';
s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
~~~~~~~~


verifichiamo 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails s -b $IP -p $PORT
~~~~~~~~

E' già attivo e sta funzionando. Più avanti facciamo un po' di refactoring per spostare il codice javascript in fondo al body di layout/application gestendolo con yield. 




## Implementiamo disqus_config

https://help.disqus.com/troubleshooting/use-configuration-variables-to-avoid-split-threads-and-missing-comments

Decommentiamo la funzione "var disqus_config"

{title=".../app/views/authors/posts/_post_single_comments.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=7}
~~~~~~~~
  var disqus_config = function () {
  this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
  this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
  };
~~~~~~~~

implementiamo PAGE_URL sostituendolo con la chiamata rails **request.original_url**

{title=".../app/views/authors/posts/_post_single_comments.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=8}
~~~~~~~~
  this.page.url = "<%= request.original_url %>";
~~~~~~~~

implementiamo PAGE_IDENTIFIER sostituendolo o con **@post.id** o con **@post.slug**

{title=".../app/views/authors/posts/_post_single_comments.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=9}
~~~~~~~~
  this.page.identifier = "<%= @post.slug %>";
~~~~~~~~

[tutto il codice: Gemfile](#brandnewcms-comments-disqus-01a-views-posts-_post_single_comments.html.erb)




verifichiamo 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails s -b $IP -p $PORT
~~~~~~~~



## How to display comment count

https://help.disqus.com/developer/adding-comment-count-links-to-your-home-page

Place the following code before your site's closing </body> tag:

{title=".../app/views/layouts/application.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=9}
~~~~~~~~
<script id="dsq-count-scr" src="//myapp-1-blabla-herokuapp-com.disqus.com/count.js" async></script>
~~~~~~~~

Append #disqus_thread to the href attribute in your links. This will tell Disqus which links to look up and return the comment count. For example: <a href="http://foo.com/bar.html#disqus_thread">Link</a>


verifichiamo 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails s -b $IP -p $PORT
~~~~~~~~




## salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "Add disqus for post comments"
~~~~~~~~




## Pubblichiamo su Heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku dc:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge dc
$ git branch -d dc
~~~~~~~~




## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~
