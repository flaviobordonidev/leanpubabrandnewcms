# Esempio di pagine statiche

Esempio di pagine statiche dello sviluppatore. Inizio con delle example_static_pages di appoggio per lo sviluppatore. Così da poter implementare l'internazionalizzazione ed il login sul back-office




## Apriamo il branch "Example Static Pages"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ cd myapp
$ git checkout -b esp
~~~~~~~~




## No scaffold

non usiamo lo Scaffold perché la homepage non ha una corrispettiva tabella nel database ma prende i dati da altre tabelle.
Usiamo il "rails generate controller ..." e gli associamo le azioni page_a e page_b. (non gli associamo le classiche azioni restful: index, show, edit, new, ...)

I> ATTENZIONE: con "rails generate controller ..." -> uso il PLURALE (ed ottengo un controller al plurale)
I>
I> Poiché sono più pagine statiche metto il controller al plurale anche se non abbiamo un elenco di elementi da visualizzare

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails g controller ExampleStaticPages page_a page_b
~~~~~~~~

Creiamo due azioni page_a page_b per avere due pagine per fare delle prove con un link che va da una pagina all'altra.

non ho nessun migrate perché non mi interfaccio con il database.


Vediamo la nostra applicazione rails funzionante:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

https://5b7c4783cd554badb3b2453e1653ff4d.vfs.cloud9.eu-west-1.amazonaws.com
https://5b7c4783cd554badb3b2453e1653ff4d.vfs.cloud9.eu-west-1.amazonaws.com/example_static_pages/page_a
https://5b7c4783cd554badb3b2453e1653ff4d.vfs.cloud9.eu-west-1.amazonaws.com/example_static_pages/page_b





## Instradiamo con routes

Aggiorno il file routes per mettere l'homepage come pagina principale (root)

{id="01-03-01_01", title="config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=3}
~~~~~~~~
  root 'example_static_pages#page_a'
~~~~~~~~

[Codice 01](#01-03-01_01all)


vediamo che addesso sull'URL della root ci reinstrada su page_a

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails s
~~~~~~~~

https://5b7c4783cd554badb3b2453e1653ff4d.vfs.cloud9.eu-west-1.amazonaws.com




## Vediamo gli instradamenti


{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails routes
~~~~~~~~

otteniamo

~~~~~~~~
cloud9:~/environment/rigenerabatterie (esp) $ rails routes
                     Prefix Verb URI Pattern                                                                              Controller#Action
                       root GET  /                                                                                        example_static_pages#page_a
example_static_pages_page_a GET  /example_static_pages/page_a(.:format)                                                   example_static_pages#page_a
example_static_pages_page_b GET  /example_static_pages/page_b(.:format)                                                   example_static_pages#page_b
         rails_service_blob GET  /rails/active_storage/blobs/:signed_id/*filename(.:format)                               active_storage/blobs#show
  rails_blob_representation GET  /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format) active_storage/representations#show
         rails_disk_service GET  /rails/active_storage/disk/:encoded_key/*filename(.:format)                              active_storage/disk#show
  update_rails_disk_service PUT  /rails/active_storage/disk/:encoded_token(.:format)                                      active_storage/disk#update
       rails_direct_uploads POST /rails/active_storage/direct_uploads(.:format)                                           active_storage/direct_uploads#create
~~~~~~~~

Il **Prefix** è quello che utiliziamo come "path" nei nostri links.




## Implementiamo le pagine (example_static_pages)

{title="views/example_static_pages/page_a.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<h1> Pagina A </h1>
<p> Il testo verrà preso dal database ma alcuni messaggi sono passati dall'applicazione ed è quindi bene che vengano tradotti per essere pronti a supportare più lingue. </p>
<br>
<p>  <%= link_to 'andiamo alla pagina B', example_static_pages_page_b_path %> </p>
~~~~~~~~


{title="views/example_static_pages/page_b.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<h1> Benvenuti nella pagina B </h1>
<p>  <%= link_to 'Torniamo alla pagina A',example_static_pages_page_a_path %> </p>
<p>  <%= link_to 'Torniamo alla homepage', root_path %> </p>
~~~~~~~~


Vediamo la nostra applicazione rails funzionante:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

adesso invece di scrivere sull'url possiamo cliccare sui links delle pagine.




## Salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "implement example_static_pages"
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge esp
$ git branch -d esp
~~~~~~~~




## Il codice del capitolo




[Codice 01](#01-03-01_01)

{id="01-03-01_01all", title="config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
Rails.application.routes.draw do

  root 'example_static_pages#page_a'
  
  get 'example_static_pages/page_a'
  get 'example_static_pages/page_b'
  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
end
~~~~~~~~
