# Nuova app Rails 6 utilizzando Cloud9 workspace


Risorse web:

* [yarn site installation Debian / Ubuntu](https://yarnpkg.com/lang/en/docs/install/#debian-stable)


## Installiamo yarn per Rails 6

Prima di installare rails 6 dobbiamo assicurarci che sia installato yarn per la gestione di webpack.
Per evitare problemi di autorizzazione lo installiamo con i diritti di root.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo su - 
-> curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
-> echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
-> sudo apt-get update && sudo apt-get install yarn

-> sudo apt-get update && sudo apt-get install --no-install-recommends yarn
-> exit
~~~~~~~~

verifichiamo che si è installato

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
yarn --version
~~~~~~~~




## Installiamo Rails 6

Per installare Rails carichiamo la corrispondente gemma ruby.

I> verifichiamo [l'ultima versione della gemma](https://rubygems.org/gems/rails)
I>
I> facciamo riferimento al [tutorial della gemma](https://rubyonrails.org/)

Poiché pubblicheremo in produzione la nostra applicazione su Heroku verifichiamo che quale versione Rails è supportata su 

* [Heroku devcenter - Getting Started on Heroku with Rails 5.x](https://devcenter.heroku.com/articles/getting-started-with-rails5)

Altra fonte utile è 

* [Michael Hartl - Rails Tutorial 1.2.2 Installing Rails](https://www.railstutorial.org/book/beginning)

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ cd ~/environment
$ gem install rails -v 5.2.2
~~~~~~~~

La versione ufficiale è la 5.2.2 ma abbiamo già la versione 6 che è alla realease candidate 2 ed è molto stabile quindi la installiamo con:

~~~~~~~~
gem install rails --pre
~~~~~~~~

Per verificare quale versione di rails abbiamo installato

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
ubuntu:~/environment $ rails -v
Rails 6.0.0.rc2
~~~~~~~~




## Creiamo l'applicazione

Una volta installato Rails passiamo a creare l'applicazione
In produzione Heroku utilizza postgreSQL quindi lo installiamo anche localmente.
Possiamo gestire postgreSQL localmente nell'ambiente di sviluppo e test perché su cloud9 è già preinstallato postgreSQL e dobbiamo solo farlo partire. Un'alternativa era quella di caricare la gemma "pg" solo per l'ambiente di produzione. Ma se possibile è preferibile usare nell'ambiente di sviluppo le stesse risorse usate in produzione.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ cd ~/environment
$ rails _6.0.0.rc2_ new s6beginning --database=postgresql
~~~~~~~~


Mi da il messaggio

"Yarn not installed. Please download and install Yarn from https://yarnpkg.com/lang/en/docs/install/"

ma al momento non lo installiamo.




## Apriamo l'applicazione localmente

Per aprire la nuova applicazione entriamo nella cartella elisinfo5 e facciamo partire il web server

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ cd s6beginning
$ rails s


ec2-user:~/environment/myapp (master) $ rails s                                                                                                                  
=> Booting Puma
=> Rails 5.2.2 application starting in development 
=> Run `rails server -h` for more startup options
Puma starting in single mode...
* Version 3.12.0 (ruby 2.4.1-p111), codename: Llamas in Pajamas
* Min threads: 5, max threads: 5
* Environment: development
* Listening on tcp://localhost:8080
Use Ctrl-C to stop
~~~~~~~~

su cloud9 clicchiamo sul link di "Preview" in alto e scegliamo "Preview Running Application"
In basso a destra si apre la finestra di preview con un messaggio di errore perché manca la connessione al database PostgreSQL.

![Fig. 01](images/01-beginning/01-new_app/04_01-preview-db_error.png)

Per vedere il preview su un tab separato del browser fare click sull'icona di espansione. Quella che quando vai sopra con il cursore apre tip "Pop Out into new windows"

Questo errore lo risolviamo nel prossimo capitolo. 
