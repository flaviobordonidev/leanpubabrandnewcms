# Git

Version Control System. Un gestore che controlla le versioni del software in fase di sviluppo.

Risorse web:

* [Gitignore - ignoring files](https://help.github.com/articles/ignoring-files)




## Inizializziamo

Entriamo nella directory del nostro nuovo applicativo

{title="terminale", lang=bash, line-numbers=off}
~~~~~~~~
$ cd myapp
~~~~~~~~

Vediamo che non c'è le cartelle nascoste **.git**

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ ls -a
~~~~~~~~

inizializziamo git.  

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git init
~~~~~~~~

I> Ricordiamoci di entrare nella directory del nostro nuovo applicativo "myapp" altrimenti si inizializza git per tutto il workspace e questo è un problema per quando si fa il push su heroku.

Questo genera anche la cartella nascosta git ed i vari files tra cui gitignore per vedere possiamo visualizzare i files nascosti dalla ruota dentata al lato del nome del workspace scegliendo dal menu a discesa la voce "show hidden files"

![Fig. a](images/01-beginning/02-git/02a-aws_cloud9-show_hidden_files.PNG)


Oppure da terminale

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ ls -a
~~~~~~~~




## La configurazione globale 

Verifichiamo la configurazione globale di git che è utilizzata per i repository esterni quali Github, Heroku, Gitbuchet, ...
Per verificare le impostazioni di git eseguiamo

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git config -l

ec2-user:~/environment/myapp (master) $ git config -l
core.editor=/usr/bin/nano
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
~~~~~~~~

First-time system setup
Before using Git, you should perform a couple of one-time setup steps. 
These are system setups, meaning you only have to do them once per computer:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git config --global user.name "My Name"
$ git config --global user.email "my@email.com"
$ git config -l


ec2-user:~/environment/myapp (master) $ git config --global user.name "Flavio Bordoni"
ec2-user:~/environment/myapp (master) $ git config --global user.email "flavio.bordoni.dev@gmail.com"
ec2-user:~/environment/myapp (master) $ git config -l
core.editor=/usr/bin/nano
user.name=Flavio Bordoni
user.email=flavio.bordoni.dev@gmail.com
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
~~~~~~~~

Più avanti quando attiveremo GitHub useremo la stessa email usata qui.
Tieni presente che il nome e l'indirizzo email che utilizzi nella configurazione di Git saranno disponibili in tutti i repository che rendi pubblici.




## Escludiamo files da git

Escludiamo da git quei files che non fanno parte del codice. Ad esempio i files temporanei o quelli di log o file di configurazione di 
pacchetti accessori. Al momento lasciamo il gitignore di default.

{title=".../.gitignore", lang=text, line-numbers=on, starting-line-number=1}
~~~~~~~~
# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore uploaded files in development
/storage/*

/node_modules
/yarn-error.log

/public/assets
.byebug_history

# Ignore master key for decrypting credentials and more.
/config/master.key
~~~~~~~~



## Versione iniziale v0.1.0

Effettuiamo il primo commit ed eseguiamo anche il tag v.0.1.0 in accordo con la convenzione del [semantic versioning](http://semver.org)

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "new rails app"

$ git tag v0.1.0
~~~~~~~~

il tag ci permette di distingure delle "pietre miliari" durante lo sviluppo. Tappe che vengono identificate da un cambio del numero della versione.
Il numero di versione segue le convenzioni del semantic versioning.
