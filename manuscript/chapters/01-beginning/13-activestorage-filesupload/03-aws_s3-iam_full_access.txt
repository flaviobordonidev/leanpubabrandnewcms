# Amazon Web Services S3 - IAM user full access

Iniziamo a dialogare con AWS - S3. Creiamo un utente IAM e gli diamo il permesso (CORS) pieno accesso a tutti i buckets di S3, ossia a tutta la parte di archiviazione.
Successivamente restringeremo i permessi (CORS) ai soli buckets produzione e sviluppo della nostra applicazione.

In questo capitolo:

* creiamo l'utente, 
* creiamo il buckets per i files di sviluppo (botrebisworldbrdev) 
* inseriamo manualmente un file di testo (example_dev.txt)
* creiamo il buckets per i files di sviluppo (botrebisworldbrprod) 
* inseriamo manualmente un file di testo (example_prod.txt)
* accessiamo il file da terminale rails tramite la gemma aws-sdk-s3




## Non apriamo il branch "Amazon Web Services S3"

questo capitolo è dedicato interamente alla preparazione dell'ambiente lato AWS S3
quindi non creiamo un branch sulla nostra applicazione rails




## Best practise di AWS S3

docs.aws.amazon.com/AmazonS3/latest/dev/UsingHTTPPOST.html

* La forma più semplice di fare upload è esare AmazonS3 PUTs che carica il file prima nel server dove gira l'applicazione Rails (Heroku nel nostro caso) e poi nel server di Amazon. Questo doppio passaggio è molto più lento. E lo stesso Heroku scoraggia fortemente questo approccio mettendo un taglio a 30s che può causare l'impossibilità di caricare files molto grandi.
* La forma più performante è usare Amazon S3 POST che passa al browser dell'utente un token di autorizzazione ed il file è direttamente caricato sul server Amazon.

Inizialmente useremo la prima forma che non richiede javascript.
Più avanti nel libro implementeremo la seconda forma più performante inserendo il codice javascript.




### Effettuiamo il login su AWS

andiamo sul sito di amazon web service https://console.aws.amazon.com e facciamo login (o creiamo un nuovo account).

![console AWS dopo login](beginning/activestorage-filesupload/03img-aws-login.png)

Di tutti i servizi (services) di AWS noi ne useremo solo due: 

* Identity and Access Management (IAM)
* il service di storage (S3) 




### Creiamo un nuovo utente - IAM user : Access key e Secret access key

E' utile avere un utente per ogni dominio web che ha i diritti di archiviare e visualizzare i files su AWS S3. Questo utente che non è un utente fisico ma del codice che si autentica ed archivia o visualizza i files viene definito "bot". Per comodità creeremo un utente "bot" per ogni nostra applicazione rails.

AWS -> Service -> IAM -> Users
* Una volta fatto login dalla ConsoleHome AWS fare click sul service "IAM". 
* Andiamo sul link Users creiamone uno nuovo. "Add user"
* Come nome dell'utente usiamo bot+nome_app_rails; nel nostro caso "botrebisworldbr".

User name   : botrebisworldbr
Access type : Programmatic access

"bot" convenzionalemente indica che non è un utente fisico ma un accesso per una applicazione.

Andiamo avanti senza mettere credenziali di sicurezza che aggiungeremo in seguito.
Una volta creato facciamo il download delle "user security credentials". E' un file csv dove abbiamo

* access_key_id : UL...WGERY
* secret_access_key : zx3I...ela+hg

Se torniamo sullo IAM user possiamo solo rivisualizzare la access_key_id. Per la secret_access_key dobbiamo eliminarlo e crearne uno nuovo.



