# Gli articoli del blog




## Creiamo la struttura per gli articoli (posts)

title       	: titolo dell'articolo. Quello che ha una bella copy.
incipit       : il testo che è sull'indice. L'inizio di un articolo che spesso è anche troncato ad hoc.
image         : l'eventuale foto
video         : l'eventuale video (al posto della foto)
type 		      : image, video, quote, ... (il tipo di post/articolo; se ha immagine o video o altro)
precontent	  : il testo prima della foto
content       : il testo principale del post a partire da dopo la foto
seocontent    : il testo che appare sui motori di ricerca
tags          : le parole più ricercate / le parole chiave
date		      : data del post
user_id		    : utente che ha scritto il post
comment_id	  : commenti (in realtà non serve perché usiamo disqus o facebook)


il "Read more" in italiano è tradotto come "Leggi tutto" o "Continua a leggere" o  "Approfondisci"
A volte non si mette semplicemente il simbolo di continua "[...]" e si lascia solo il link sul titolo.

Iniziamo con una parte della struttura e poi via via implementiamo il resto.

Usiamo lo Scaffold che mi imposta già l'applicazione in stile restful con le ultime convenzioni Rails.
Lo scaffold crea su routes la voce resources, crea il modulo, il migration, e tutte le views un controller con le 7 azioni in stile restful:
index, show, new, edit, create, update e destroy. 

I> ATTENZIONE: con "rails generate scaffold ..." -> uso il SINGOLARE

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails g scaffold Post title:string incipit:text content:text
~~~~~~~~

questo crea il migrate:

{title=".../db/migrate/xxx_create_posts.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class CreatePosts < ActiveRecord::Migration[5.2]
  def change
    create_table :posts do |t|
      t.string :title
      t.text :incipit
      t.text :content

      t.timestamps
    end
  end
end
~~~~~~~~

Effettuiamo il migrate del database per creare la tabella sul database

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails db:migrate
~~~~~~~~



## Sistemiamo le routes

Lo scaffold già ci ha creato il **resources :posts** diamo solo una sistemata alle righe per una questione di ordine e non di funzionalità

{title=".../config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=10}
~~~~~~~~
  resources :posts
~~~~~~~~




## Salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "Add scaffold Post"
~~~~~~~~




## Pubblichiamo su Heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku fi:master
$ heroku run rails db:migrate
~~~~~~~~




## Popoliamo manualmente

inseriamo quattro articoli (posts) e mettiamo il contenuto usando https://hipsum.co/ che è simile a Lorem ipsum ma più divertente.




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge fi
$ git branch -d fi
~~~~~~~~


## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~

