# Bootstrap Grid

Implementiamo la grid bootstrap nelle nostre pagine example_static_pages




## Apriamo il branch "BootStrap Grid"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b bsg
~~~~~~~~




## La Griglia
Il componente principale di bootstrap: la griglia 'responsive'. Bootstrap include fra i suoi strumenti una griglia responsiva a 12 colonne talmente flessibile e potente che spesso viene utilizzata da sola.

La griglia è fatta di righe e colonne, le righe (.row) devono essere collocate all’interno di un contenitore che può essere a larghezza fissa (.container)
o a larghezza fluida (container-fluid), questo garantisce il corretto allineamento e padding degli elementi interni.

Proviamo gli esempi scaricati direttamente dal sito di bootstrap




## La view static_pages per bootstrap grid

Creiamo la nuova page_c per fare le prove per la grid di bootstrap

* creiamo una nuova azione (page_c) nel controller (example_static_pages_controller.rb)
* creiamo una nuova view
* aggiorniamo gli instradamenti (routes.rb)




## Gli esempi di griglie

Proviamo gli esempi del sito [bootstrap](https://getbootstrap.com/docs/4.1/layout/grid/)

Al fine di comprendere meglio come funzionano le griglie aggiungiamo uno stile di debug che ne evidenzi la struttura.

{title=".../app/assets/stylesheets/application.scss", lang=ruby, line-numbers=on, starting-line-number=17}
~~~~~~~~
@import "debug_bootstrap_grid";
~~~~~~~~

{title=".../app/assets/stylesheets/debug_bootstrap_grid.css", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
.row > div { min-height:100px; border:1px solid red;}
~~~~~~~~

proviamo l'esempio 1

{title=".../app/views/example_static_pages/page_c.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<!-- contenitore responsivo a larghezze fisse -->
<div class="container">
  <div class="row">
    <div class="col-lg-12">
    </div>
  </div>
</div>
~~~~~~~~

proviamo l'esempio 2

{title=".../app/views/example_static_pages/page_c.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<!-- contenitore responsivo fluido -->
<div class="container-fluid">
  <div class="row">
    <div class="col-lg-12">
    </div>
  </div>
</div>
~~~~~~~~

proviamo l'esempio 3
Le righe permettono di isolare gruppi orizzontali di colonne delineando confini ben precisi nel layout responsivo.

{title=".../app/views/example_static_pages/page_c.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<div class="container">
  <div class="row">
    <div class="col-lg-6">
    </div>
    <div class="col-lg-6">
    </div>
  </div>
  <div class="row">
    <div class="col-lg-4">
    </div>
    <div class="col-lg-4">
    </div>
    <div class="col-lg-4">
    </div>
  </div>
</div>
~~~~~~~~

proviamo l'esempio 4
Per garantire il corretto funzionamento della griglia responsiva il contenuto deve essere collocato all’interno delle colonne e solamente le colonne possono essere figlie delle righe. Le colonne sono spaziate fra loro con il padding. Tramite le righe il padding dell’ultima e della prima colonna sono compensati da un margin negativo.

{title=".../app/views/example_static_pages/page_c.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<div class="container">
  <div class="row">
    <div class="col">
      1 of 2
    </div>
    <div class="col">
      2 of 2
    </div>
  </div>
  <div class="row">
    <div class="col">
      1 of 3
    </div>
    <div class="col">
      2 of 3
    </div>
    <div class="col">
      3 of 3
    </div>
  </div>
</div>
~~~~~~~~




## salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "Implement bootstrap grid on example_static_pages page_c"
~~~~~~~~




## Pubblichiamo su Heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku bsg:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge bsg
$ git branch -d bsg
~~~~~~~~

aggiorniamo github

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~

