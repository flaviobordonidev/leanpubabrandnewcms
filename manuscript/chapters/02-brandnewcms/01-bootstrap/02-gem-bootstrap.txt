# Gem bootstrap

Abbiamo già usato la libreria bootstrap nella sezione precedente "theme-mylogin" ma adesso lo inseriamo a livello di gemma.

Per una completa integrazione con Rails è meglio caricare bootstrap tramite la gemma.
Ad esempio attivandolo dal gemfile possiamo gestire correttamente il codice per il **link di delete** che altrimenti non funziona e si deve ricorrere al **button**.

La chiamata a Bootstrap viene fatta sul file dell'asset-pipeline e quindi possiamo richiamare il bootstrap installato tramite la gemma per alcune pagine e puntare invece ad una libreria scaricata o ad un CDN per altre pagine.
Ovviamente è preferibile usare solo un sorgente ed ancora meglio se tramite webpack ma a volte alcuni temi funzionano solo con una specifica release di bootstrap.

Riferimenti sul web:
* http://getbootstrap.com/getting-started/#download
* https://github.com/twbs/bootstrap-sass




## Apriamo il branch "BootStrap"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b bs
~~~~~~~~




## Installiamo Bootstrap 4


I> verifichiamo [l'ultima versione della gemma](https://rubygems.org/gems/bootstrap)
I>
I> facciamo riferimento al [tutorial github della gemma](https://github.com/twbs/bootstrap-rubygem)
I>
I> facciamo riferimento al [sito ufficiale](http://getbootstrap.com/docs/4.0/getting-started/download/)

{title=".../Gemfile", lang=ruby, line-numbers=on, starting-line-number=56}
~~~~~~~~
# The most popular HTML, CSS, and JavaScript framework. http://getbootstrap.com
gem 'bootstrap', '~> 4.1', '>= 4.1.3'
~~~~~~~~

Da rails 5.1 non è più messo di default 'jquery-rails' ma bootstrap lo usa ancora quindi lo aggiungiamo.
Bootstrap JavaScript depends on jQuery. If you're using Rails 5.1+, add the jquery-rails gem to your Gemfile: gem 'jquery-rails'

{title=".../Gemfile", lang=ruby, line-numbers=on, starting-line-number=59}
~~~~~~~~
# Use jquery as the JavaScript library
gem 'jquery-rails'
~~~~~~~~

[tutto il codice](#brandnewcms-bootstrap-Gemfile)


Eseguiamo l'installazione utilizzando bundle

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ bundle install
~~~~~~~~

La gemma è installata. Verifichiamo che sprockets-rails sia almeno alla versione v2.3.2. 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ bundle show sprockets-rails
~~~~~~~~

Adesso non ci resta che informare l'asset-pipeline della presenza di bootstrap.




## Asset-pipeline

il file principale dell'asset-pipeline (che prende il nome di "manifest") è richiamato dal layout. Nella nostra app abbiamo due layouts differenti:

* il layout di default    : .../app/views/layouts/application.html.erb
* il layour per il login  : .../app/views/layouts/mylogin.html.erb

Al momento implementiamo bootstrap solo per il layout application




### Assets Stylesheets

1. Rinominiamo application.css in application.scss
2. Eliminiamo sia *= require_self 
              sia *= require_tree
   E' bene non usare *= require in Sass altrimenti gli altri stylesheets non saranno in grado di accedere alle variabili globalo o ai mixins di Bootstrap.
3. aggiungiamo gli @import 

{title=".../app/assets/stylesheets/application.scss", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
// Custom bootstrap variables must be set or imported *before* bootstrap.
@import "bootstrap";
~~~~~~~~

[tutto il codice](##brandnewcms-bootstrap-assets-stylesheets-application.scss)


OPZIONALE. 
Per usare i gliphicon potrebbe essere necessario importare "bootstrap-sprockets"

{title=".../app/assets/stylesheets/application.scss", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
// "bootstrap-sprockets" must be imported before "bootstrap" and "bootstrap variables"
@import "bootstrap-sprockets"; //this allow the gliphicon to work (forse da rails 5.1 non serve più)
~~~~~~~~




## Assets Javascripts

1. aggiungiamo i vari **require**

{title=".../app/assets/javascripts/application.js", lang=ruby, line-numbers=on, starting-line-number=13}
~~~~~~~~
//= require jquery3
//= require popper
//= require bootstrap-sprockets
~~~~~~~~

[tutto il codice](#brandnewcms-bootstrap-assets-javascripts-application.js)

Non possiamo mettere entrambi "bootstrap" e "bootstrap-sprockets" ne dobbiamo scegliere uno. La guida di bootstrap suggerisce di usare "bootstrap-sprokets" per un debug più facile.
While bootstrap-sprockets provides individual Bootstrap components for ease of debugging, you may alternatively require the concatenated bootstrap for faster compilation




## Salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "install bootstrap"
~~~~~~~~




## Pubblichiamo su Heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku bs:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge bs
$ git branch -d bs
~~~~~~~~

aggiorniamo github

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~
