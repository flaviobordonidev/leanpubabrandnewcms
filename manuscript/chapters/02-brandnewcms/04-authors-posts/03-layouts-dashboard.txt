# La Dashboard

una volta loggato l'utente entrerà in un ambiente detto Dashboard da cui può gestire il CMS (content management system).
Se è un autore potrà creare, editare, eliminare, pubblicare i suoi articoli.
Se è un amministratore oltre alle azioni da autore potrà gestire tutti gli utenti.


Risorse web:

* [I vari campi imput del form in HTML](https://www.w3schools.com/html/html_form_elements.asp)
* [I tipi di campi imput del form in HTML](https://www.w3schools.com/html/html_form_input_types.asp)




## Apriamo il branch "Modulo Authors per la Dashboard"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b mad
~~~~~~~~




## Creiamo un layout personalizzato per la dashboard

Duplichiamo il layouts/application e rinominiamo la copia layouts/dashboard

* .../app/views/layouts/application.html.erb    ->  .../app/views/layouts/dashboard.html.erb (copia, incolla e rinomina)

Inoltre aggiungiamo il container per bootstrap ed un semplice avviso "Solo per autori" per differenziarlo.

{title=".../app/views/layouts/dashboard.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=5}
~~~~~~~~
  <body>
    <div class="container">
~~~~~~~~

{id="02-04-03_01", title=".../app/views/layouts/dashboard.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=21}
~~~~~~~~
      <p class="alert alert-info text-center">Solo per Autori</p>
~~~~~~~~

[Codice 01](#02-04-03_01all)





## Assegnamo il layout dashboard alle pagine degli autori

{id="02-04-03_02", title=".../app/controllers/authors/posts_controller.rb", lang=ruby, line-numbers=on, starting-line-number=4}
~~~~~~~~
  layout 'dashboard'
~~~~~~~~

[Codice 02](#02-04-03_02all)




## Aggiorniamo la barra di navigazione (navbar)

aggiungiamo una voce alla nostra navbar per i posts degli autori (index, edit e new)

{title=".../app/views/layouts/_navbar.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=13}
~~~~~~~~
        <li class="nav-item">
          <%= link_to 'Miei Articoli', authors_posts_path, class: "nav-link #{yield(:menu_myposts_nav_link)}" %>
        </li>
~~~~~~~~

ed i relativi **provide**, per lo **yield** nei rispettivi views

{title=".../app/views/authors/posts/index.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=2}
~~~~~~~~
<% provide(:menu_myposts_nav_link, "active") %>
~~~~~~~~

{title=".../app/views/authors/posts/new.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=2}
~~~~~~~~
<% provide(:menu_myposts_nav_link, "active") %>
~~~~~~~~

{title=".../app/views/authors/posts/edit.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=2}
~~~~~~~~
<% provide(:menu_myposts_nav_link, "active") %>
~~~~~~~~
## Iniziamo a personalizzare la dashboard

rendiamo auhtors/posts/index più simile ad un ambiente di "lavoro" per i posts dell'autore




## Formattiamo authors/posts/index

Usiamo le classi html di Bootsrap per rendere la tabella "a strisce" in modo da evidenziare le varie righe.

{title=".../app/views/authors/posts/index.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=12}
~~~~~~~~
<table class="table table-striped">
~~~~~~~~

per formattare il link edit facendolo sembrare un pulsante

{title=".../app/views/authors/posts/index.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=43}
~~~~~~~~
        <td><%= link_to 'Edit', edit_authors_post_path(post), class: 'btn btn-sm btn-warning' %></td>
~~~~~~~~

per formattare il link destroy facendolo sembrare un pulsante

{title=".../app/views/authors/posts/index.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=44}
~~~~~~~~
        <td><%= link_to 'Destroy', authors_post_path(post), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-sm btn-danger' %></td>
~~~~~~~~

lasciamo "show" come link aggiungendo che apra un nuovo tab del browser, per visualizzare come l'utente finale vedrà l'articolo

{title=".../app/views/authors/posts/index.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=42}
~~~~~~~~
        <td><%= link_to 'Show', post, target: "_blank"%></td>
~~~~~~~~

andiamo su una nuova pagina perché nella visualizzazione come l'utente finale togliamo la barra di navigazione in alto.




## Formattiamo authors/posts/_form

Dedichiamoci adesso alla formattazione del form di aggiunta/modifica articolo. Implementiamo la griglia di bootstrap ed il componente cards.
Prepariamo un blocco di codice che aggiungiamo in fondo al form. Inizialmente non lo leghiamo al database; usiamo l'helper "tag." che crea dei campi slegati dal Model. 

{id="02-04-03_03", title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
  <div class="row">
    <div class="col-md-4">
      <!--<div class="card" style="width: 18rem;">-->
      <div class="card">
        <div class="card-body">
            <h5 class="card-title">Nuovo Articolo o Modifica Articolo: Pincopallo della felice scelta che si ripropone con costanza</h5>
          <div class="field">
            <label>Title</label> 
            <input type="text" class="form-control">
          </div>
        </div>
        <ul class="list-group list-group-flush">
          <li class="list-group-item">
            <div class="field">
              <label>select_media</label> 
              <select name="select_media"><!-- menu a cascata (drop-down list) -->
                <option value="a">Immagine</option>
                <option value="b">Video youtube</option>
                <option value="c">Video vimeo</option>
                <option value="d">Audio</option>
              </select>
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Immagine</label>
              <br><img src="https://images.pexels.com/photos/634843/pexels-photo-634843.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=200" alt="Immagine demo presa da pexels.com" width="200" height="200"><br>
              <input type="file" name="myFile">
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Video YouTube</label>
              <input type="text" class="form-control" value="https://youtu.be/Ma_i0JvdNN0"><!-- parte di URL youtube o vimeo che identifica il video -->
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Video Vimeo</label>
              <input type="text" class="form-control" value="https://vimeo.com/user94273470/review/313142032/1326689190"><!-- parte di URL youtube o vimeo che identifica il video -->
            </div>
          </li>

          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Immagine per i social. (476x249px)</label>
              <br><img src="https://images.pexels.com/photos/634843/pexels-photo-634843.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=476&w=249" alt="Immagine demo presa da pexels.com" width="200" height="200"><br>
              <input type="file" name="myFile"><!-- image 476x249 px -->
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Descrizione per i social.</label>
              <textarea name="incipit" rows="3" class='form-control'>Cari amici, guardate questo. E' una ficata!</textarea><!-- max 160 caratteri -->
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Tags (separati da virgola)</label>
              <textarea name="incipit" rows="2" class='form-control'>salute, sport, cucina mediterranea, mantenersi in forma</textarea>
            </div>
          </li>

          <li class="list-group-item">
            <div class="actions">
              <input type="submit" value="Salva l'articolo" class="btn btn-success btn-lg btn-block">
            </div>
          </li>
        </ul>
      </div>

    </div>
    
    <div class="col-md-8">
      <div class="field">
        <label class="control-label">Incipit</label>
        <textarea name="incipit" rows="3" class='form-control'>Descrizione che viene vista nell'elenco degli articoli. E' una parte introduttiva che termina nel [leggi tutto].</textarea>
      </div>

      <div class="field"><h6>---Read More---</h6></div>

      <div class="field">
        <label class="control-label">Corpo</label>
        <textarea name="incipit" rows="8" class='form-control'>Descrizione Dettagliata.</textarea>
      </div>
    </div>
  </div>
~~~~~~~~

[Codice 03](#02-04-03_03all)

I> Facebook raccomanda 1200 x 630 pixels (h x w) per le dimensini della og:image che è un aspect ratio di circa 1.91:1.
I> Altre fonti raccomandano 476 x 249 px, che è sempre un aspect ratio di circa 1.91:1 (476/249=1.91).

Verificato l'effetto iniziamo ad inserirci i campi legati al database.




## Il titolo

Nel card-body inseriamo il campo :title e visualizziamo nel titoletto il contenuto della "scatola vuota" yield(:page_title) che è impostato nella view "edit" o nella view "new".

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
        <div class="card-body">
            <h5 class="card-title"><%= yield(:page_title) %></h5>
          <div class="field">
            <%= form.label :title %>
            <%= form.text_field :title, class: "form-control" %>
          </div>
        </div>
~~~~~~~~

questo ci evita di dover usare una chiamata if..else..end del tipo:

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
        <div class="card-body">
          <% if post.new_record? %>
            <h5 class="card-title">Nuovo articolo</h5>
          <% else %>
            <h5 class="card-title">Edit: <%= post.title %></h5>
          <% end %>
~~~~~~~~




### Il menu a cascata

Portiamo nella nostra grid il menu a cascata che permettere di selezionare il tipo di articolo

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=12}
~~~~~~~~
        <ul class="list-group list-group-flush">
          <li class="list-group-item">
            <div class="field">    
              <%= form.label :type_of_content %>
              <%= form.select(:type_of_content, Post.type_of_contents.keys.map {|type| [Post.human_attribute_name("type.#{type}"),type]}) %><!-- menu a cascata (drop-down list) -->
            </div>
          </li>
~~~~~~~~




### Il resto dei campi

Portiamo il resto dei campi così come sono nel grid. Li miglioreremo nei prossimi capitoli
campo per video youtube

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=72}
~~~~~~~~
            <div class="field">
              <%= form.label :video_youtube, class: "control-label" %>
              <%= form.text_field :video_youtube, class: "form-control" %><!-- parte di URL youtube che identifica il video -->
            </div>
~~~~~~~~


campo per video vimeo

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=72}
~~~~~~~~
            <div class="field">
              <%= form.label :video_vimeo, class: "control-label" %>
              <%= form.text_field :video_vimeo, class: "form-control" %><!-- parte di URL vimeo che identifica il video -->
            </div>
~~~~~~~~


campo per seo content

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=72}
~~~~~~~~
            <div class="field">
              <%= form.label :seocontent, class: "control-label" %>
              <%= form.text_area :seocontent, row: "3", class: "form-control" %><!-- max 160 caratteri -->
            </div>
~~~~~~~~


campo "scegli data" per impostare una data a piacimento per l'articolo.

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=72}
~~~~~~~~
            <div class="field">
              <%= form.label :date_chosen, class: "control-label"  %>
              <%#= form.date_select :date_chosen %>
              <%= form.text_field :date_chosen, class: "form-control", row: "2" %>
            </div>
~~~~~~~~


pulsante "submit"

{title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=72}
~~~~~~~~
            <div class="actions">
              <%= form.submit "Salva l'articolo", class: "btn btn-success btn-lg btn-block" %>
            </div>
~~~~~~~~




## salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "Incapsule a copy of posts in the module author"
~~~~~~~~




## Pubblichiamo su Heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku mad:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge mad
$ git branch -d mad
~~~~~~~~


aggiorniamo github

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~




## Il codice del capitolo




[Codice 01](#02-04-03_01)

{id="02-04-03_01all", title=".../app/views/layouts/dashboard.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<!DOCTYPE html>
<html>
  <head>
    <title><%= yield(:page_title) %> | MyApp</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>
    <div class="container">
      
      <% if user_signed_in? %> <%= render 'layouts/dashboard_navbar' %><% end %>
  
      <% if notice %><p class="alert alert-info"><%= notice %></p><% end %>
      <% if alert %><p class="alert alert-warning"><%= alert %></p><% end %>
      
      <%= yield %>
      <p class="alert alert-info text-center">Solo per Autori</p>
    </div>
  </body>
</html>
~~~~~~~~




[Codice 02](#02-04-03_02)

{id="02-04-03_02all", title=".../app/controllers/authors/posts_controller.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class Authors::PostsController < ApplicationController
  before_action :authenticate_user!
  before_action :set_post, only: [:edit, :update, :destroy]
  layout 'dashboard'

  # GET /authors/posts
  # GET /authors/posts.json
  def index
    @posts = current_user.posts unless current_user.admin?
    @posts = Post.all if current_user.admin?
    authorize @posts
  end

  # GET /authors/posts/new
  def new
    #@post = Post.new
    @post = current_user.posts.new
    authorize @post
  end

  # GET /authors/posts/1/edit
  def edit
  end

  # POST /authors/posts
  # POST /authors/posts.json
  def create
    @post = Post.new(post_params)
    authorize @post

    respond_to do |format|
      if @post.save
        format.html { redirect_to @post, notice: 'Post was successfully created.' }
        format.json { render :show, status: :created, location: @post }
      else
        format.html { render :new }
        format.json { render json: @post.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /authors/posts/1
  # PATCH/PUT /authors/posts/1.json
  def update
    respond_to do |format|
      if @post.update(post_params)
        format.html { redirect_to @post, notice: 'Post was successfully updated.' }
        format.json { render :show, status: :ok, location: @post }
      else
        format.html { render :edit }
        format.json { render json: @post.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /authors/posts/1
  # DELETE /authors/posts/1.json
  def destroy
    @post.destroy
    respond_to do |format|
      format.html { redirect_to posts_url, notice: 'Post was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_post
      @post = Post.friendly.find(params[:id])
      authorize @post
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def post_params
      params.require(:post).permit(:title, :incipit, :content, :type, :video_youtube, :video_vimeo, :seocontent, :date_chosen, :user_id)
    end
end
~~~~~~~~




[Codice 03](#02-04-03_03all)

{id="02-04-03_03", title=".../app/views/authors/posts/_form.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<%= form_with(model: post, local: true, url: authors_url) do |form| %>
  <% if post.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
      <% post.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :seocontent %>
    <%= form.text_area :seocontent %>
  </div>

  <div class="field">
    <%= form.label :date_chosen %>
    <%#= form.date_select :date_chosen %>
    <%= form.text_field :date_chosen %>
  </div>

  <div class="field">
    <%= form.label :user_id %>
    <%= form.text_field :user_id %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>



  <div class="row">
    <div class="col-md-4">
      <!--<div class="card" style="width: 18rem;">-->
      <div class="card">
        <div class="card-body">
            <h5 class="card-title">Nuovo Articolo o Modifica Articolo: Pincopallo della felice scelta che si ripropone con costanza</h5>
          <div class="field">
            <label>Title</label> 
            <input type="text" class="form-control">
          </div>
        </div>
        <ul class="list-group list-group-flush">
          <li class="list-group-item">
            <div class="field">
              <label>select_media</label> 
              <select name="select_media"><!-- menu a cascata (drop-down list) -->
                <option value="a">Immagine</option>
                <option value="b">Video youtube</option>
                <option value="c">Video vimeo</option>
                <option value="d">Audio</option>
              </select>
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Immagine</label>
              <br><img src="https://images.pexels.com/photos/634843/pexels-photo-634843.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=200" alt="Immagine demo presa da pexels.com" width="200" height="200"><br>
              <input type="file" name="myFile">
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Video YouTube</label>
              <input type="text" class="form-control" value="https://youtu.be/Ma_i0JvdNN0"><!-- parte di URL youtube o vimeo che identifica il video -->
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Video Vimeo</label>
              <input type="text" class="form-control" value="https://vimeo.com/user94273470/review/313142032/1326689190"><!-- parte di URL youtube o vimeo che identifica il video -->
            </div>
          </li>

          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Immagine per i social. (476x249px)</label>
              <br><img src="https://images.pexels.com/photos/634843/pexels-photo-634843.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=476&w=249" alt="Immagine demo presa da pexels.com" width="200" height="200"><br>
              <input type="file" name="myFile"><!-- image 476x249 px -->
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Descrizione per i social.</label>
              <textarea name="incipit" rows="3" class='form-control'>Cari amici, guardate questo. E' una ficata!</textarea><!-- max 160 caratteri -->
            </div>
          </li>
          <li class="list-group-item">
            <div class="field">
              <label class="control-label">Tags (separati da virgola)</label>
              <textarea name="incipit" rows="2" class='form-control'>salute, sport, cucina mediterranea, mantenersi in forma</textarea>
            </div>
          </li>

          <li class="list-group-item">
            <div class="actions">
              <input type="submit" value="Salva l'articolo" class="btn btn-success btn-lg btn-block">
            </div>
          </li>
        </ul>
      </div>

    </div>
    
    <div class="col-md-8">
      <div class="field">
        <label class="control-label">Incipit</label>
        <textarea name="incipit" rows="3" class='form-control'>Descrizione che viene vista nell'elenco degli articoli. E' una parte introduttiva che termina nel [leggi tutto].</textarea>
      </div>

      <div class="field"><h6>---Read More---</h6></div>

      <div class="field">
        <label class="control-label">Corpo</label>
        <textarea name="incipit" rows="8" class='form-control'>Descrizione Dettagliata.</textarea>
      </div>
    </div>
  </div>
  
  
  
<% end %>
~~~~~~~~
