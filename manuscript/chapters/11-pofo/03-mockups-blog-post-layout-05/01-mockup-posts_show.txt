# La preparazione iniziale

Vengono fatti gli stessi passaggi fatti nel capitolo precedente per importare la pagina di visualizzazione del singolo articolo.




## Apriamo il branch "Mockup Posts_Show"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout -b mps
~~~~~~~~



## Scelti dal tema Pofo

dalla cartella principale abbiamo scelto il seguente file per l'indice degli articoli

* .../html/blog-post-layout-05.html

quindi iniziamo importando il codice di questo file nella nostra applicazione Rails.




## Creiamo il nostro mockup blog_post_layout_05

creiamo il nuovo file blog_post_layout_05 tra le nostre pagine statiche di esempio e copiamo il contenuto del file html scelto dal tema (da -> a):

* .../html/blog-post-layout-05.html -> .../app/views/mockups/blog_post_layout_05.html.erb




## Impostiamo il layout mockups_yield

Inizialmente usiamo il layout "mockups_yield" che abbiamo creato nei capitoli precedenti.

aggiungiamo l'azione "blog_post_layout_05" al controller mockup e diciamogli di utilizzare il layout mockups_yield.

{title=".../app/controllers/mockups_controller.rb", lang=ruby, line-numbers=on, starting-line-number=16}
~~~~~~~~
  def blog_post_layout_05
    render layout: 'mockups_yield'
  end
~~~~~~~~




## Aggiorniamo gli instradamenti

Aggiorniamo il file routes

{title="config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=24}
~~~~~~~~
  get 'mockups/blog_post_layout_05'
~~~~~~~~




## Verifichiamo preview

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

apriamolo il browser sull'URL:

* https://mycloud9path.amazonaws.com/mockups/blog_post_layout_05

non ci resta che importare stylesheets e javascripts, ma questo lo vediamo nel prossimo capitolo




## archiviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add mockups/blog_post_layout_05"
~~~~~~~~




## Pubblichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku mps:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge mps
$ git branch -d mps
~~~~~~~~




## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~




## Il codice del capitolo

