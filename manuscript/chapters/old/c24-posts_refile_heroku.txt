# Refile per heroku

Heroku non vuole immagazzinare le immagini in locale quindi Fla sceglie di utilizzare S3 di Amazon.



### Risorse web: 
  * https://github.com/refile/refile
  * http://cecycorrea.com/2015/07/22/rails-refile-tutorial.html
  * 
  * http://fog.io/storage/
  * 
  * https://github.com/refile/refile/issues/161
  * http://stackoverflow.com/questions/28643834/refile-s3-backend-for-production-and-file-backend-for-development-mode



Una volta loggato su AWS fa click su RomaSportFace -> Security Credentials

I> o andava direttamente su https://console.aws.amazon.com/iam/home?region=us-west-2#security_credential
  
Gli arriva il messaggio

You are accessing the security credentials page for your AWS account. The account credentials provide unlimited access to your AWS resources.
To help secure your account, follow an AWS best practice by creating and using AWS Identity and Access Management (IAM) users with limited permissions.
Continue to Security Credentials  Get Started with IAM Users

Per il momento sceglie di non seguire la "best practice" e sceglie "Continue to Security Credentials".
Fa click su "Access Keys (Access Key ID and Secret Access Key)" e "Create New Access Key".

Access Key ID:
AKIAIACQSMRHGT5L47YA
Secret Access Key:
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


Adesso crea un nuovo bucket.

Torna sul menu generale "Amazon Web Services" cliccando sul logo in alto a sinistra.
Clicca su "Storage & Content Delivery - S3 - Scalable Storage in the Cloud" e "Create Bucket".

A> Bucket Name: romasportfaceimages
A>
A> Region: Frankfurt

I> Region: Frankfurt <- Non è il valore da usare per refile!
I>
I> Il valore region da usare lo vedi su "Static Website Hosting" -> "Endpoint"
I>
I> Nel nostro caso è " eu-central-1 "



Inserisce la nuova gemma nel gemfile

[codice: application xx](#code-application-xx)

{title="Gemfile", lang=ruby, line-numbers=on, starting-line-number=47}
~~~~~~~~
gem "refile-s3"
~~~~~~~~

La installa

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ bundle install
~~~~~~~~


## Interfacciamento con Adobe Web Service S3

Adesso mette il file di inizializzazione per interfacciarsi con il suo account su AWS S3. 

crea il nuovo file "refile.rb" su config/inizializers


{title="config/initializers/refile.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
require "refile/fog"

credentials = {
  provider: "aws",
  aws_access_key_id: "AKIAIACQSMRHGT5L47YA",
  aws_secret_access_key: "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",
  region: "eu-central-1",
  directory: "romasportfaceimages"
}

Refile.configure do |config|
  config.cache = Refile::Fog::Backend.new(prefix: "cache", **credentials)
  config.store = Refile::Fog::Backend.new(prefix: "store", **credentials)
end
~~~~~~~~


Una volta testata in locale lascio AWS S3 solo su heroku mentre in produzione uso il comportamento di default che mi archivia i files in locale su romasportface2/tmp/uploads/store. 

I> il backend usato lo puoi vedere anche su " $ rails c " dando il comando " -> Refile.backends "

[codice: application config 03](#code-application-config-03)

{title="config/initializers/refile.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
if Rails.env.production?
...
~~~~~~~~


In alternativa si può usare la gemma ...

{title="config/initializers/refile.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
if Rails.env.production?

  require "refile/s3"

  aws = {
    access_key_id: "AKIAIACQSMRHGT5L47YA",
    secret_access_key: "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",
    region: "eu-central-1",
    bucket: "romasportfaceimages",
  }
  Refile.cache = Refile::S3.new(prefix: "cache", **aws)
  Refile.store = Refile::S3.new(prefix: "store", **aws)

  end
end
~~~~~~~~

I> attenzione! region se preso dal bucket è "Frankfurt" ma questo non funziona! si deve vedere più in basso su "Static Website Hosting" ed estrapolarlo da "Endpoint".


{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "refile backend Amazon Web Services S3"
$ git push heroku refile_image:master
$ heroku run rake db:migrate
$ git push origin refile_image
~~~~~~~~



Questa user story è finita  quindi faccio un "pull request" su github per fare il merge e chiudere il branch.


{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge refile_image
$ git push origin master
$ git branch -d refile_image
$ git push origin :refile_image
~~~~~~~~
