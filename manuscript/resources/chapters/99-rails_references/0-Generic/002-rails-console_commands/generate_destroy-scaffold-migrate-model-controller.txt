# Il comando generate


Generiamo tutto lo "scaffold" perché vogliamo anche i controllers e le views. 
 - il "migrate" crea la sola tabella
 - il "model" oltre alla tabella crea il model per il collegamento uno-a-molti.
 - lo "scaffold" crea anche il controller e le views. [si usa il SINGOLARE]

- il "controller" crea SOLO il controller e le views. Non crea tabella e model.


---

Usiamo lo Scaffold che mi imposta già l'applicazione in stile restful con le ultime convenzioni Rails.

I> ATTENZIONE: con "rails generate scaffold ..." -> usiamo il SINGOLARE
    -> lui in automatico genera correttamente la tabella, il controller e le views al plurale.








## Creiamo uno scaffold di esempio

Avendo creato la tabella users con il comando di Devise non ci possiamo avvalere del settaggio impostato dallo "scaffold" ma possiamo comunque prendere come riferimento quello già usato per exampleposts oppure crearcene uno nostro exampleusers.
Creaiamoci un exampleusers che ci rende facile fare copia incolla.


{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails g scaffold ExampleUser email:string password:string password_confirmation:string role:integer
~~~~~~~~

NON eseguiamo $ rails db:migrate così non creaiamo una tabella inutile nel database. (altrimenti avremmo dovuto eliminarla con $rake db:rollback.)
Inoltre eliminiamo il file migrate "db/migrate/xxx_create_example_users.rb" altrimenti riceveremmo un messaggio di errore di migrate:pending.

Finito con i copia/incolla possiamo eliminare i files creati dallo scaffold con 

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails destroy scaffold ExampleUser
~~~~~~~~

Tutti i passaggi per tenere uno scaffold temporaneo e poi eliminarlo sarebbero:

* $ rails generate scaffold ...
* $ rails db:migrate
* $ rails db:rollback
* $ rails destroy scaffold ...


P.S.
Uno più smaliziato avrebbe eseguito il "$ rails g scaffold User..." senza eseguire il migrate ed eliminando il file migrate. Ma didatticamente è meglio fare copia/incolla passo-passo.

