# Formattiamo le date nelle varie lingue

Di default il comando di formattazione della data prende i nomi in inglese. Vediamo come implementare l'Italiano.

Risorse interne:

* 99-rails_references/i18n/02-format_date_time_i18n




## Trasliamo i parametri di default di Rails per il nostro locale (it.yml)

{id="01-05-01_01", title=".../config/locales/it.yml", lang=yaml, line-numbers=on, starting-line-number=4}
```
it:

# variabili globali prese da https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/it.yml
  activerecord:
    errors:
      messages:
        record_invalid: 'Validazione fallita: %{errors}'
        restrict_dependent_destroy:
          has_one: Il record non può essere cancellato perchè esiste un %{record}
            dipendente
          has_many: Il record non può essere cancellato perchè esistono %{record}
            dipendenti
  date:
    abbr_day_names:
    - dom
    - lun
    - mar
    - mer
    - gio
    - ven
    - sab
    abbr_month_names:
    - 
    - gen
    - feb
    - mar
    - apr
    - mag
    - giu
    - lug
    - ago
    - set
    - ott
    - nov
    - dic
```

[Codice 01](#01-05-01_01all)


## Traduciamo la stringa 

per formattare in italiano la data possiamo usare le stesse variabili di " strftime " all'interno del nostro locale (it.yml)

{id="01-05-01_01", title=".../config/locales/it.yml", lang=yaml, line-numbers=on, starting-line-number=4}
```
  time:
    formats:
      short: "ora %d %^B %Y" 
```

[Codice 01](#01-05-01_01all)


e richiamiamo la formattazione con l'helper " l "

{title=".../app/views/posts/_pofo_page_title_section2.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=12}
```
<%#= @post.published_at.strftime("%d %^B %Y") %>
<%= l @post.published_at, format: :short %>
```

[Codice 06](#02-06-01_01all)

Per approfondimenti sulle variabili di formattazione vedi [Volume 1 - Cap 3.3](#01-base-03-mockups-03-format_date_time)




**

Meglio non usare " Time.now " perché ha un bug nella gestione dei fusi orari. (vedi 99-rails_references/data_types/date_time)

```
  <%#= l Time.now, format: :short %>
```

Invece usiamo " DateTime.current " che gestisce meglio tutto.

```
  <%#= l DateTime.current, format: :short %>
```


**

{id: 01-base-03-mockups-03-format_date_time}
# [Volume 1 - Cap 3.3] Formattiamo un campo data ora




{title=".../app/views/posts/_pofo_page_title_section2.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=12}
~~~~~~~~
<%= @post.published_at.strftime("%d %^B %Y") %>
~~~~~~~~

[Codice 06](#02-06-01_01all)


la variabile "@post.published_at" l'abbiamo formattata con ".strftime("%d %^B %Y")" di cui questi sono i parametri più usati:

* %Y - Anno con incluso il secolo, ossia almeno con 4 cifre. Può essere anche negativo. Es: -0001, 0000, 1995, 2009, 14292, etc.
* %y - Anno senza il secolo, ossia con solo 2 cifre. Es: 00..99
* %C - Secolo (Anno / 100 arrotondato per difetto). Es: il secolo dell'anno 2019 è rappresentato con "20" 

* %m  - Mese,  zero-padded (01..12).            Es: gennaio è rappresentato con "01"
* %-m - Mese,     no-padded (1..12).            Es: gennaio è rappresentato con "1"
* %_m - Mese, blank-padded ( 1..12).            Es: gennaio è rappresentato con " 1"
* %B  - Mese, con nome pieno.                   Es: gennaio è rappresentato con "January"
* %^B - Mese, con nome pieno in maiuscolo.      Es: gennaio è rappresentato con "JANUARY"
* %b  - Mese, con nome abbreviato.              Es: gennaio è rappresentato con "Jan"
* %^b - Mese, con nome abbreviato in maiuscolo. Es: gennaio è rappresentato con "JAN"

* %d  - Giorno del mese,   zero-padded (01..31). Es: il primo di gennaio è rappresentato con "01"
* %-d - Giorno del mese,      no-padded (1..31). Es: il primo di gennaio è rappresentato con "1"
* %e  - Giorno del mese,  blank-padded ( 1..31). Es: il primo di gennaio è rappresentato con " 1"
* %j  - Giorno dell'anno (001..366)
* %A  - Giorno della settimana nome pieno.                        Es: domenica è rappresentata con "Sunday"
* %^A - Giorno della settimana nome pieno in maiuscolo.           Es: domenica è rappresentata con "SUNDAY"
* %a  - Giorno della settimana abbreviato.                        Es: domenica è rappresentata con "Sun"
* %^a - Giorno della settimana abbreviato in maiuscolo.           Es: domenica è rappresentata con "SUN"
* %u  - Giorno della settimana in numero (1..7) con Monday is 1.  Es: domenica è rappresentata con "7"
* %w  - Giorno della settimana in numero (0..6) con Sunday is 0.  Es: domenica è rappresentata con "0"

* %H - Hour of the day, 24-hour clock, zero-padded (00..23)
* %k - Hour of the day, 24-hour clock, blank-padded ( 0..23)
* %I - Hour of the day, 12-hour clock, zero-padded (01..12)
* %l - Hour of the day, 12-hour clock, blank-padded ( 1..12)
* %P - Meridian indicator, lowercase (``am'' or ``pm'')
* %p - Meridian indicator, uppercase (``AM'' or ``PM'')

* %M - Minute of the hour (00..59)

* %S - Second of the minute (00..59)

* %L - Millisecond of the second (000..999)

Per una lista completa dei formati per il metodo "strftime" visitare [APIDock](http://apidock.com/ruby/DateTime/strftime)



---

models/post.rb
~~~~~~~~
## getter method
  def display_day_published 
    if published_at.present?
      created_at.strftime('%-d %-b %Y')
      #"Pupplicato il #{created_at.strftime('%-d %-b %Y')}"
    else
      "not published yet"
    end
  end
~~~~~~~~


models/post.rb
~~~~~~~~
  # == Scopes ===============================================================

  scope :published, -> { where(published: true) }
  scope :most_recent, -> { order(published_at: :desc) }
  scope :order_by_id, -> { order(id: :desc) }
~~~~~~~~
