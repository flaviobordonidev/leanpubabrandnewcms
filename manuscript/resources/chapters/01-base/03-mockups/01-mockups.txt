{id: 01-base-03-mockups-01-mockups}
# Cap 3.1 -- Esempio di pagine statiche

Esempio di pagine statiche dello sviluppatore. Inizio con delle example_static_pages di appoggio per lo sviluppatore. Così da poter implementare l'internazionalizzazione ed il login sul back-office



TODO: rinominare da "example_static_pages" a "mockups" (infatti più avanti useremo delle pagine statiche per importare degli esempi statici importati da temi html. successivamente li renderemo dinamici) 
Spiegare ch nei "mockups" creiamo delle "Pagine Statiche di Esempio".



## Apriamo il branch "Mockups Static Pages"

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ cd myapp
$ git checkout -b msp
~~~~~~~~




## No scaffold

non usiamo lo Scaffold perché la homepage non ha una corrispettiva tabella nel database ma prende i dati da altre tabelle.
Usiamo il "rails generate controller ..." e gli associamo le azioni page_a e page_b. (non gli associamo le classiche azioni restful: index, show, edit, new, ...)

I> ATTENZIONE: con "rails generate controller ..." -> uso il PLURALE (ed ottengo un controller al plurale)
I>
I> Poiché sono più pagine statiche metto il controller al plurale anche se non abbiamo un elenco di elementi da visualizzare

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails g controller Mockups page_a page_b
~~~~~~~~

Creiamo due azioni page_a page_b per avere due pagine per fare delle prove con un link che va da una pagina all'altra.

non ho nessun migrate perché non mi interfaccio con il database.




### Verifichiamo preview

Vediamo la nostra applicazione rails funzionante. Attiviamo il webserver

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

e vediamo i vari URLs sul nostro browser:

* https://mycloud9path.amazonaws.com
* https://mycloud9path.amazonaws.com/mockups/page_a
* https://mycloud9path.amazonaws.com/mockups/page_b





## Instradiamo con routes

Aggiorno il file routes per mettere l'homepage come pagina principale (root)

{id="01-03-01_01", title="config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=3}
~~~~~~~~
  root 'mockups#page_a'
~~~~~~~~

[Codice 01](#01-03-01_01all)




### Verifichiamo preview

Attiviamo il webserver

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

e vediamo che addesso sull'URL della root "/" ci reinstrada su page_a:

* https://mycloud9path.amazonaws.com
* https://mycloud9path.amazonaws.com/mockups/page_a
* https://mycloud9path.amazonaws.com/mockups/page_b




## Vediamo gli instradamenti da terminale


{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ rails routes

ec2-user:~/environment/myapp (esp) $ rails routes
                     Prefix Verb URI Pattern                                                                              Controller#Action
                       root GET  /                                                                                        mockups#page_a
mockups_page_a GET  /mockups/page_a(.:format)                                                   mockups#page_a
mockups_page_b GET  /mockups/page_b(.:format)                                                   mockups#page_b
         rails_service_blob GET  /rails/active_storage/blobs/:signed_id/*filename(.:format)                               active_storage/blobs#show
  rails_blob_representation GET  /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format) active_storage/representations#show
         rails_disk_service GET  /rails/active_storage/disk/:encoded_key/*filename(.:format)                              active_storage/disk#show
  update_rails_disk_service PUT  /rails/active_storage/disk/:encoded_token(.:format)                                      active_storage/disk#update
       rails_direct_uploads POST /rails/active_storage/direct_uploads(.:format)                                           active_storage/direct_uploads#create
~~~~~~~~

Nella colonna "Prefix" c'è la voce che utiliziamo per creare i "paths" nei nostri links: "Prefix"+"_path"

esempi:

* root_path
* mockups_page_a_path
* mockups_page_b_path




## Implementiamo le pagine (mockups)

{title="views/mockups/page_a.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<h1> Pagina A </h1>
<p> Il testo verrà preso dal database ma alcuni messaggi sono passati dall'applicazione ed è quindi bene che vengano tradotti per essere pronti a supportare più lingue. </p>
<br>
<p>  <%= link_to 'andiamo alla pagina B', mockups_page_b_path %> </p>
~~~~~~~~


{title="views/mockups/page_b.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=1}
~~~~~~~~
<h1> Benvenuti nella pagina B </h1>
<p>  <%= link_to 'Torniamo alla pagina A',mockups_page_a_path %> </p>
<p>  <%= link_to 'Torniamo alla homepage', root_path %> </p>
~~~~~~~~




### Verifichiamo preview

Attiviamo il webserver

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

e vediamo i vari URLs sul nostro browser:

* https://mycloud9path.amazonaws.com
* https://mycloud9path.amazonaws.com/mockups/page_a
* https://mycloud9path.amazonaws.com/mockups/page_b

adesso invece di scrivere sull'URL, per spostarsi tra le pagine, possiamo cliccare sui links.




## Salviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "implement mockups"
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge msp
$ git branch -d msp
~~~~~~~~




## Il codice del capitolo




[Codice 01](#01-03-01_01)

{id="01-03-01_01all", title="config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
Rails.application.routes.draw do

  root 'mockups#page_a'
  
  get 'mockups/page_a'
  get 'mockups/page_b'
  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
end
~~~~~~~~
