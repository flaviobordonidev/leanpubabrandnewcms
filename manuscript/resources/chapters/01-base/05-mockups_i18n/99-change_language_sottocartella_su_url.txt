Mettiamo la selezione della lingua all'interno dell'URL. Così avremo
localhost:3000/it
localhost:3000/en
Per far questo mettiamo tutti i nostri percorsi "routes" dentro un blocco "scope".

[codice: application config 08](#code-application-config-08)

{title="config/routes.rb", lang=ruby, line-numbers=on, starting-line-number=2}
```
scope "(:locale)", locale: /en|it/ do
```

potevo lasciare uno scope più ampio 

```
scope "(:locale)" do
```

ma questo mi creava un problema di sicurezza. Molto meglio verificare che sia passato un "locale" valido. Nel nostro caso o "it" o "en" che ho gestito nei miei files yml con la traduzione.



può essere necessario riavviare il webserver per permettere a Rails di caricare il file it.yml

{title="terminal", lang=bash, line-numbers=off}
```
CTRL+C        (per stoppare)
$ rails s     (per ripartire)
```


verifichiamo sul browser http://localhost:3000





{title="terminal", lang=bash, line-numbers=off}
```
$ git add -A
$ git commit -m "set i18n static at the end of the URL"
```



## Risolvo problema sui link_to

Avere un blocco "scope" su routes mi crea un problema sul comportamento di default di Rails di tutti i links. Per risolverlo:

[Codice: application controllers 02](#code-application-controllers-02)

{title="controllers/application_controller.rb", lang=ruby, line-numbers=on, starting-line-number=21}
```
def default_url_options(options = {})
  {locale: I18n.locale}
end
```





