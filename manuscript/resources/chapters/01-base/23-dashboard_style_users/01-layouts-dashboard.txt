# La Dashboard

una volta loggato l'utente entrerà in un ambiente detto Dashboard da cui può gestire il CMS (content management system).
In questo capitolo implementiamo lo stile per la gestione degli utenti.


Risorse web:

* [I vari campi imput del form in HTML](https://www.w3schools.com/html/html_form_elements.asp)
* [I tipi di campi imput del form in HTML](https://www.w3schools.com/html/html_form_input_types.asp)




## Apriamo il branch "Layout Dashboard"

{caption: "terminal", format: bash, line-numbers: false}
```
$ git checkout -b ld
```




## Creiamo un layout personalizzato per la dashboard

Duplichiamo il layouts/application e rinominiamo la copia layouts/dashboard

* .../app/views/layouts/application.html.erb    ->  .../app/views/layouts/dashboard.html.erb (copia, incolla e rinomina)

Inoltre aggiungiamo il container per bootstrap ed un semplice avviso "Solo per autori" per differenziarlo.

{id="02-05-01_01", title=".../app/views/layouts/dashboard.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=5}
```
  <body>
    <div class="container">
```

{title=".../app/views/layouts/dashboard.html.erb", lang=HTML+Mako, line-numbers=on, starting-line-number=21}
```
      <p class="alert alert-info text-center">Ambiente Dashboard</p>
```

[Codice 01](#02-05-01_01all)




## salviamo su git

{caption: "terminal", format: bash, line-numbers: false}
```
$ git add -A
$ git commit -m "Create layout dashboard"
```




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{caption: "terminal", format: bash, line-numbers: false}
```
$ git checkout master
$ git merge ld
$ git branch -d ld
```
