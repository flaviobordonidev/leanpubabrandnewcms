<!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
<div id="player"></div>

<%= form_with(model: [@lesson, @step], local: true, id: "test-form", class: "fbhidden") do |form| %>
  <div class="field">
    <%= @step.question %>
  </div>
  <!-- Creiamo nuovo Record -->
  <%= form.fields_for :answers, Answer.new do |answer| %>
    <%= render "answer_fields", form: answer %>
  <% end %>
  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>


<p>----------------------DEBUG---------------------------</p>
<p>Utente loggato: <%= current_user.name %> - Aula: <%= @lesson.id %> Step: <%= @step.id %></p>

<p id="notice"><%= notice %></p>

<ul id="player-commands-list"></ul>

<!--<p>
  <strong>Answers di tutti</strong>
  <ul>
    <%# @step.answers.each do |answer| %>
      <li>
        <%#= answer.content %> - by <%#= answer.user.name %>
      </li>
    <%# end %>
  </ul>
</p>-->

<!--<p>
  <strong>Answers dell'utente loggato</strong>
  <ul>
    <%# @step.answers.each do |answer| %>
      <%# if answer.user_id == current_user.id %>  
        <li>
          <%#= answer.content %> - by <%#= answer.user.name %>
        </li>
      <%# end %>
    <%# end %>
  </ul>
</p>-->


<!--  
<%#= form_with(model: [@lesson, @step], local: true) do |form| %>
  <%# if @step.errors.any? %>
    <div id="error_explanation">
      <h2><%#= pluralize(@step.errors.count, "error") %> prohibited this step from being saved:</h2>

      <ul>
        <%# @step.errors.full_messages.each do |message| %>
          <li><%#= message %></li>
        <%# end %>
      </ul>
    </div>
  <%# end %>

  <div class="field">
    <%#= form.label :answer %>
    <%#= form.text_area :answer %>
  </div>

  <div class="actions">
    <%#= form.submit %>
  </div>
<%# end %>
-->

<%= link_to 'Edit', edit_lesson_step_path(@lesson, @step) %> |
<%= link_to 'Back', lesson_steps_path(@lesson) %>

<br>
<%= link_to 'Prev', lesson_step_path(@lesson, @step.id-1) if @step.id > @lesson.steps.first.id %> --
<%= link_to 'Next', lesson_step_path(@lesson, @step.id+1) if @step.id < @lesson.steps.last.id %>

<% fbvalue = "QwG30ZZFSyI" if @step.id == 1 %>
<% fbvalue = "0Nm5AvhKpQQ" if @step.id == 2 %>
<% fbvalue = "5ZKcIbWxhh0" if @step.id == 3 %>

<script>
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: '<%= fbvalue %>',
      //videoId: 'QwG30ZZFSyI',
      playerVars: {
        'playsinline': 1
      },
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  // 5. The API calls this function when the player's state changes.
  function onPlayerStateChange(event) {
    <%# Rails.logger.debug "FLAVIO DEBUG: #{fbvalue}" %>
    if (event.data == YT.PlayerState.PLAYING) {
      console.log("PLAYING");
      let pcl = document.getElementById('player-commands-list'); // mettiamo su una variabile il tag <ul id="player-commands-list"></ul>
      let li = document.createElement('li'); // creiamo un nuovo tag <li></li>
      li.textContent = 'PLAYING'; // inseriamo il valore tra il tag <li></li>
      pcl.insertBefore(li, pcl.firstElementChild); // insert a new node before the first list item
    }
    if (event.data == YT.PlayerState.PAUSED) {          
      console.log("PAUSED");
      let pcl = document.getElementById('player-commands-list'); // mettiamo su una variabile il tag <ul id="player-commands-list"></ul>
      let li = document.createElement('li'); // creiamo un nuovo tag <li></li>
      li.textContent = 'PAUSED'; // inseriamo il valore tra il tag <li></li>
      pcl.insertBefore(li, pcl.firstElementChild); // insert a new node before the first list item
    }
    if (event.data == YT.PlayerState.ENDED) {          
      console.log("ENDED - Evviva ^_^");
      let pcl = document.getElementById('player-commands-list'); // prendiamo il tag <ul id="player-commands-list"></ul>
      let li = document.createElement('li'); // creiamo un nuovo tag <li></li>
      li.textContent = 'ENDED'; // inseriamo il valore tra il tag <li></li>
      pcl.insertBefore(li, pcl.firstElementChild); // insert a new node before the first list item
      let playerDiv = document.getElementById('player') // prendiamo il tag con id="player"
      playerDiv.style.display = "none" //Nascondiamo il player
      let formTest = document.getElementById('test-form') // prendiamo il tag con id="test-form"
      formTest.style.display = "block" //Mostriamo il form
    }
  }
</script>
