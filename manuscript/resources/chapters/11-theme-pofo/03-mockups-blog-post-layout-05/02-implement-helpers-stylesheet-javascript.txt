# Attiviamo javascripts per la pagina blog_post_layout_05

Come già discusso nei capitoli precedenti partiamo dalla strada più semplice ed usiamo "Asset pipeline".



## Apriamo il branch "Implement Javascript"

usiamo il branch già aperto nel precedente capitolo




## Impostiamo gli helpers per puntare all'asset_pipeline

E' praticamente un copia incolla di quanto già fatto per "mockups-blog_clean_full_width" perché non ci sono chiamate a differenti librerie.

Inseriamo gli helpers che puntano all'asset_pipeline sia per stylesheets che javascripts.
Per far questo sostituiamo le chiamate (da -> a):

* <link rel="stylesheet" href="css/xxx.css" />              -> <%= stylesheet_link_tag 'pofo/css/xxx', media: 'all', 'data-turbolinks-track': 'reload' %>
* <script type="text/javascript" src="js/xxx.js"></script>  -> <%= javascript_include_tag 'pofo/js/xxx', 'data-turbolinks-track' => true %>

Lo facciamo per tutte le chiamate che incontriamo

{id: "11-02-02_01", caption: ".../views/mockups/blog_clean_full_width.html.erb -- codice 01", format: HTML+Mako, line-numbers: true, number-from: 1}
```
        <!-- animation -->
        <%= stylesheet_link_tag 'pofo/css/animate', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- bootstrap -->
        <%= stylesheet_link_tag 'pofo/css/bootstrap.min', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- et line icon --> 
        <%= stylesheet_link_tag 'pofo/css/et-line-icons', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- font-awesome icon -->
        <%#= stylesheet_link_tag 'pofo/css/font-awesome.min', media: 'all', 'data-turbolinks-track': 'reload' %>
        <%= stylesheet_link_tag 'pofo/css/font-awesome-free', media: 'all', 'data-turbolinks-track': 'reload' %>
        <%#= stylesheet_pack_tag 'application_mockup_pofo', media: 'all', 'data-turbolinks-track': 'reload' %><!-- serve per heroku. In locale non serve perché indichiamo lo stile direttamente da "packs/application.js"-->
        <!-- themify icon -->
        <%= stylesheet_link_tag 'pofo/css/themify-icons', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- swiper carousel -->
        <%= stylesheet_link_tag 'pofo/css/swiper.min', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- justified gallery  -->
        <%= stylesheet_link_tag 'pofo/css/justified-gallery.min', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- magnific popup -->
        <%= stylesheet_link_tag 'pofo/css/magnific-popup', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- revolution slider -->
        <%#= stylesheet_link_tag 'pofo/revolution/css/settings', media: 'screen', 'data-turbolinks-track': 'reload' %>
        <%#= stylesheet_link_tag 'pofo/revolution/css/layers', media: 'all', 'data-turbolinks-track': 'reload' %>
        <%#= stylesheet_link_tag 'pofo/revolution/css/navigation', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- bootsnav -->
        <%= stylesheet_link_tag 'pofo/css/bootsnav', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- style -->
        <%= stylesheet_link_tag 'pofo/css/style', media: 'all', 'data-turbolinks-track': 'reload' %>
        <!-- responsive css -->
        <%= stylesheet_link_tag 'pofo/css/responsive', media: 'all', 'data-turbolinks-track': 'reload' %>
```


{caption: ".../views/mockups/blog_clean_full_width.html.erb -- continua", format: HTML+Mako, line-numbers: true, number-from: 1}
```
        <!-- javascript libraries -->
        <%= javascript_include_tag 'pofo/js/jquery', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/modernizr', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/bootstrap.min', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/jquery.easing.1.3', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/skrollr.min', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/smooth-scroll', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/jquery.appear', 'data-turbolinks-track' => true %>
        <!-- menu navigation -->
        <%= javascript_include_tag 'pofo/js/bootsnav.js', 'data-turbolinks-track' => true %>
        <%= javascript_include_tag 'pofo/js/jquery.nav.js', 'data-turbolinks-track' => true %>

        <!-- animation -->
        <%= javascript_include_tag 'pofo/js/wow.min', 'data-turbolinks-track' => true %>
.
.
.
        <!-- setting -->
        <%= javascript_include_tag 'pofo/js/main', 'data-turbolinks-track' => true %>

```

[tutto il codice](#11-02-02_01all)


Verificato che è tutto uguale non dobbiamo fare nientaltro perché abbiamo già inserito le librerie javascripts e stylesheets per "mockups-blog_clean_full_width". 




## Precompile

Non essendoci novità, non è necessario fare nessuna aggiunta al precompile.




## I fonts

Per i fonts e la parte jquery inseriamo gli helpers che effettuano le chiamate a webpack

{id: "11-02-02_01", caption: ".../views/mockups/blog_clean_full_width.html.erb -- codice 01", format: HTML+Mako, line-numbers: true, number-from: 6}
```
    <%= stylesheet_pack_tag 'application_mockup_pofo', media: 'all', 'data-turbolinks-track': 'reload' %><!-- serve per heroku. In locale non serve perché indichiamo lo stile direttamente da "packs/application.js"-->
    <%= javascript_pack_tag 'application_mockup_pofo', 'data-turbolinks-track': 'reload' %>
```




## Verifichiamo preview

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ sudo service postgresql start
$ rails s
~~~~~~~~

apriamo il browser sull'URL:

* https://mycloud9path.amazonaws.com/example_static_pages/posts_show

Vediamo che tutto funziona come ci si aspettava. Mancano solo le immagini. (I fonts delle icone sono visibili perché sono gli stessi già implementati per posts_index)




## archiviamo su git

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git add -A
$ git commit -m "add pofo stylesheets e javascripts to posts_show"
~~~~~~~~




## Pubblichiamo su heroku

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push heroku mp:master
~~~~~~~~




## Chiudiamo il branch

se abbiamo finito le modifiche e va tutto bene:

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git checkout master
$ git merge mp
$ git branch -d mp
~~~~~~~~




## Facciamo un backup su Github

Dal nostro branch master di Git facciamo un backup di tutta l'applicazione sulla repository remota Github.

{title="terminal", lang=bash, line-numbers=off}
~~~~~~~~
$ git push origin master
~~~~~~~~




## Il codice del capitolo

