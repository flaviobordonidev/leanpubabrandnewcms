# cpmaps_edit_side_person




#### 01 {#code-contact_person_maps-cpmaps_edit_side_person-01}

{title=".../app/controllers/contact_person_maps_controller.rb", lang=ruby, line-numbers=on, starting-line-number=1}
~~~~~~~~
class ContactPersonMapsController < ApplicationController
  before_action :set_contact_person_map, only: [:show, :edit, :update, :destroy]

  # GET /contact_person_maps
  # GET /contact_person_maps.json
  def index
    @contact_person_maps = ContactPersonMap.all
  end

  # GET /contact_person_maps/1
  # GET /contact_person_maps/1.json
  def show
  end

  # GET /contact_person_maps/new
  def new
    @contact_person_map = ContactPersonMap.new
  end

  # GET /contact_person_maps/1/edit
  def edit
    if params[:change_id].present?
      if params[:last_front_controller] == "people"
        @contact_person_map.contact_id = params[:change_id]
      elsif params[:last_front_controller] == "contacts"
        @contact_person_map.people_id = params[:change_id]
      end
    end
  end

  # POST /contact_person_maps
  # POST /contact_person_maps.json
  def create
    @contact_person_map = ContactPersonMap.new(contact_person_map_params)

    respond_to do |format|
      if @contact_person_map.save
        format.html { redirect_to @contact_person_map, notice: 'Contact person map was successfully created.' }
        format.json { render :show, status: :created, location: @contact_person_map }
      else
        format.html { render :new }
        format.json { render json: @contact_person_map.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /contact_person_maps/1
  # PATCH/PUT /contact_person_maps/1.json
  def update
    respond_to do |format|
      if @contact_person_map.update(contact_person_map_params)
        #format.html { redirect_to @contact_person_map, notice: 'Contact person map was successfully updated.' }
        format.html { redirect_to url_for(view_context.h_params_path(path: "/#{params[:last_front_controller]}/#{params[:last_front_id]}", related: params[:last_front_related], page: params[:last_front_page], search: params[:last_front_search])), notice: 'Contact Person map was successfully updated..' }
        format.json { render :show, status: :ok, location: @contact_person_map }
      else
        format.html { render :edit }
        format.json { render json: @contact_person_map.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /contact_person_maps/1
  # DELETE /contact_person_maps/1.json
  def destroy
    @contact_person_map.destroy
    respond_to do |format|
      format.html { redirect_to contact_person_maps_url, notice: 'Contact person map was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_contact_person_map
      @contact_person_map = ContactPersonMap.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def contact_person_map_params
      params.require(:contact_person_map).permit(:contact_id, :person_id, :summary)
    end
end
~~~~~~~~